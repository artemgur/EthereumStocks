{
  "contractName": "Stocks",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_stocksCount",
          "type": "uint32"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "director",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "dividendProposals",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "isMeeting",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lastMeetingTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minTimeToMakeProposals",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "proposedDividendSizes",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stockholderList",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stockholders",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "stocksCount",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "sellPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "sellCount",
          "type": "uint32"
        },
        {
          "internalType": "bool",
          "name": "voted",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "stocksCount",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "",
          "type": "uint32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeBetweenMeetings",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "timeToVote",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "targetAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "sellCount",
          "type": "uint32"
        }
      ],
      "name": "sellOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellPrice",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "sellCount",
          "type": "uint32"
        }
      ],
      "name": "companySellOrder",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "sellerStockholder",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "buyCount",
          "type": "uint32"
        }
      ],
      "name": "buyStocks",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividendSize",
          "type": "uint256"
        }
      ],
      "name": "makeDividendsProposal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "dividendSize",
          "type": "uint256"
        }
      ],
      "name": "vote",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "payDividends",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_stocksCount\",\"type\":\"uint32\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"sellerStockholder\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"buyCount\",\"type\":\"uint32\"}],\"name\":\"buyStocks\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"sellCount\",\"type\":\"uint32\"}],\"name\":\"companySellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"director\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"dividendProposals\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isMeeting\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lastMeetingTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dividendSize\",\"type\":\"uint256\"}],\"name\":\"makeDividendsProposal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minTimeToMakeProposals\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"payDividends\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"proposedDividendSizes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"sellCount\",\"type\":\"uint32\"}],\"name\":\"sellOrder\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stockholderList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stockholders\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"stocksCount\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"sellPrice\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"sellCount\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"voted\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stocksCount\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeBetweenMeetings\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"timeToVote\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"dividendSize\",\"type\":\"uint256\"}],\"name\":\"vote\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"targetAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/Stocks.sol\":\"Stocks\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/Stocks.sol\":{\"keccak256\":\"0x3fccee24d2a7905539d254bd2bc7aa3a45023d31253b91cef2ffe3b5e531ad47\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ebde2e842c21b0bbe0261f16512a71e412eca42a82e16f3d1ff4fb9d0b359dd6\",\"dweb:/ipfs/QmPnmjxrFZVkhyA9BhHX8CBtRjZNUkU1j4BB9EB3WkB2Gq\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x60806040526004361061012a5760003560e01c80635af82abf116100ab578063bdf39a071161006f578063bdf39a07146103e6578063cce5491714610411578063d0e30db01461043c578063dae896cf14610446578063de88a34214610471578063f3fef3a3146104885761012a565b80635af82abf1461031357806392ac771a1461033e57806392b8024214610369578063945837e214610392578063b544e611146103bd5761012a565b80631f1dfdca116100f25780631f1dfdca146102055780632818d036146102455780633342a52d1461027057806351cff8d9146102ad57806354413d41146102d65761012a565b80630121b93f1461012f578063068bb0261461015857806306fdde03146101815780630a09c554146101ac5780631c24c8e8146101c8575b600080fd5b34801561013b57600080fd5b5061015660048036038101906101519190611f42565b6104b1565b005b34801561016457600080fd5b5061017f600480360381019061017a9190611fab565b61080c565b005b34801561018d57600080fd5b50610196610959565b6040516101a39190612084565b60405180910390f35b6101c660048036038101906101c19190612104565b6109e7565b005b3480156101d457600080fd5b506101ef60048036038101906101ea9190611f42565b61118e565b6040516101fc9190612153565b60405180910390f35b34801561021157600080fd5b5061022c600480360381019061022791906121ac565b6111b1565b60405161023c9493929190612203565b60405180910390f35b34801561025157600080fd5b5061025a61120e565b6040516102679190612248565b60405180910390f35b34801561027c57600080fd5b5061029760048036038101906102929190611f42565b611213565b6040516102a49190612248565b60405180910390f35b3480156102b957600080fd5b506102d460048036038101906102cf9190612263565b611237565b005b3480156102e257600080fd5b506102fd60048036038101906102f89190611f42565b611361565b60405161030a919061229f565b60405180910390f35b34801561031f57600080fd5b506103286113a0565b604051610335919061229f565b60405180910390f35b34801561034a57600080fd5b506103536113c6565b6040516103609190612248565b60405180910390f35b34801561037557600080fd5b50610390600480360381019061038b9190611fab565b6113cb565b005b34801561039e57600080fd5b506103a76115a8565b6040516103b49190612248565b60405180910390f35b3480156103c957600080fd5b506103e460048036038101906103df9190611f42565b6115ad565b005b3480156103f257600080fd5b506103fb611828565b60405161040891906122ba565b60405180910390f35b34801561041d57600080fd5b5061042661183b565b6040516104339190612153565b60405180910390f35b610444611851565b005b34801561045257600080fd5b5061045b611853565b6040516104689190612248565b60405180910390f35b34801561047d57600080fd5b50610486611859565b005b34801561049457600080fd5b506104af60048036038101906104aa91906122d5565b611d59565b005b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff160361054c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161054390612361565b60405180910390fd5b600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160049054906101000a900460ff16156105dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d3906123cd565b60405180910390fd5b60006006600083815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff1611610648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063f9061245f565b60405180910390fd5b42607860b460025461065a91906124ae565b61066491906124ae565b106106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161069b90612550565b60405180910390fd5b4260788060b46002546106b791906124ae565b6106c191906124ae565b6106cb91906124ae565b101561070c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610703906125e2565b60405180910390fd5b6001600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160046101000a81548160ff021916908315150217905550600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff166006600083815260200190815260200160002060008282829054906101000a900463ffffffff166107eb9190612602565b92506101000a81548163ffffffff021916908363ffffffff16021790555050565b8063ffffffff16600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1610156108ad576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108a4906126d4565b60405180910390fd5b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548163ffffffff021916908363ffffffff1602179055505050565b6000805461096690612723565b80601f016020809104026020016040519081016040528092919081815260200182805461099290612723565b80156109df5780601f106109b4576101008083540402835291602001916109df565b820191906000526020600020905b8154815290600101906020018083116109c257829003601f168201915b505050505081565b8063ffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160009054906101000a900463ffffffff1663ffffffff161015610a88576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a7f906127c6565b60405180910390fd5b8063ffffffff16600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610adc91906127e6565b341015610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b15906128b2565b60405180910390fd5b60008163ffffffff16600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060010154610b7491906127e6565b905081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160008282829054906101000a900463ffffffff16610bd791906128d2565b92506101000a81548163ffffffff021916908363ffffffff16021790555081600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900463ffffffff16610c5691906128d2565b92506101000a81548163ffffffff021916908363ffffffff1602179055506000600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1603610f45576000805b600580549050811015610d71578473ffffffffffffffffffffffffffffffffffffffff1660058281548110610d1057610d0f612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1603610d5e57809150610d71565b8080610d6990612935565b915050610cd8565b5060056001600580549050610d86919061297d565b81548110610d9757610d96612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1660058281548110610dd657610dd5612906565b5b9060005260206000200160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060056001600580549050610e32919061297d565b81548110610e4357610e42612906565b5b9060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690556005805480610e8257610e816129b1565b5b6001900381819060005260206000200160006101000a81549073ffffffffffffffffffffffffffffffffffffffff02191690559055600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600080820160006101000a81549063ffffffff021916905560018201600090556002820160006101000a81549063ffffffff02191690556002820160046101000a81549060ff02191690555050505b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1603611009576005339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b81600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160008282829054906101000a900463ffffffff1661106a9190612602565b92506101000a81548163ffffffff021916908363ffffffff1602179055503073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614611103578273ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015611101573d6000803e3d6000fd5b505b3073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611189573373ffffffffffffffffffffffffffffffffffffffff166108fc823461115c919061297d565b9081150290604051600060405180830381858888f19350505050158015611187573d6000803e3d6000fd5b505b505050565b60066020528060005260406000206000915054906101000a900463ffffffff1681565b60046020528060005260406000206000915090508060000160009054906101000a900463ffffffff16908060010154908060020160009054906101000a900463ffffffff16908060020160049054906101000a900460ff16905084565b607881565b6007818154811061122357600080fd5b906000526020600020016000915090505481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112c7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112be90612a2c565b60405180910390fd5b600360009054906101000a900460ff1615611317576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161130e90612ae4565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561135d573d6000803e3d6000fd5b5050565b6005818154811061137157600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60b481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461145b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161145290612a2c565b60405180910390fd5b8063ffffffff16600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1610156114fc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114f390612b9c565b60405180910390fd5b81600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206001018190555080600460003073ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160006101000a81548163ffffffff021916908363ffffffff1602179055505050565b607881565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1603611648576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161163f90612361565b60405180910390fd5b42607860b460025461165a91906124ae565b61166491906124ae565b10801561167657506000600780549050145b1561169b57607860b44261168a919061297d565b611694919061297d565b6002819055505b42607860b46002546116ad91906124ae565b6116b791906124ae565b10156116f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116ef90612c2e565b60405180910390fd5b4260b460025461170891906124ae565b10611748576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161173f90612c9a565b60405180910390fd5b47600160149054906101000a900463ffffffff1663ffffffff168261176d91906127e6565b11156117ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117a590612d2c565b60405180910390fd5b6001600360006101000a81548160ff02191690831515021790555060016006600083815260200190815260200160002060006101000a81548163ffffffff021916908363ffffffff160217905550600781908060018154018082558091505060019003906000526020600020016000909190919091505550565b600360009054906101000a900460ff1681565b600160149054906101000a900463ffffffff1681565b565b60025481565b6000600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff16036118f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118eb90612361565b60405180910390fd5b4260788060b460025461190791906124ae565b61191191906124ae565b61191b91906124ae565b1061195b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161195290612dbe565b60405180910390fd5b600360009054906101000a900460ff166119aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016119a190612e50565b60405180910390fd5b60008060005b600780549050811015611acf578263ffffffff1660066000600784815481106119dc576119db612906565b5b9060005260206000200154815260200190815260200160002060009054906101000a900463ffffffff1663ffffffff161115611a78576006600060078381548110611a2a57611a29612906565b5b9060005260206000200154815260200190815260200160002060009054906101000a900463ffffffff16925060078181548110611a6a57611a69612906565b5b906000526020600020015491505b6006600060078381548110611a9057611a8f612906565b5b9060005260206000200154815260200190815260200160002060006101000a81549063ffffffff02191690558080611ac790612935565b9150506119b0565b5060076000611ade9190611ec9565b60005b600580549050811015611d325760006004600060058481548110611b0857611b07612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060020160046101000a81548160ff0219169083151502179055503073ffffffffffffffffffffffffffffffffffffffff1660058281548110611bb257611bb1612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614611d1f5760058181548110611c0c57611c0b612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6004600060058581548110611c6857611c67612906565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000160009054906101000a900463ffffffff1663ffffffff1684611cf291906127e6565b9081150290604051600060405180830381858888f19350505050158015611d1d573d6000803e3d6000fd5b505b8080611d2a90612935565b915050611ae1565b50426002819055506000600360006101000a81548160ff0219169083151502179055505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611de9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611de090612a2c565b60405180910390fd5b8080471015611e2d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e2490612ebc565b60405180910390fd5b600360009054906101000a900460ff1615611e7d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611e7490612ae4565b60405180910390fd5b8273ffffffffffffffffffffffffffffffffffffffff166108fc839081150290604051600060405180830381858888f19350505050158015611ec3573d6000803e3d6000fd5b50505050565b5080546000825590600052602060002090810190611ee79190611eea565b50565b5b80821115611f03576000816000905550600101611eeb565b5090565b600080fd5b6000819050919050565b611f1f81611f0c565b8114611f2a57600080fd5b50565b600081359050611f3c81611f16565b92915050565b600060208284031215611f5857611f57611f07565b5b6000611f6684828501611f2d565b91505092915050565b600063ffffffff82169050919050565b611f8881611f6f565b8114611f9357600080fd5b50565b600081359050611fa581611f7f565b92915050565b60008060408385031215611fc257611fc1611f07565b5b6000611fd085828601611f2d565b9250506020611fe185828601611f96565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561202557808201518184015260208101905061200a565b83811115612034576000848401525b50505050565b6000601f19601f8301169050919050565b600061205682611feb565b6120608185611ff6565b9350612070818560208601612007565b6120798161203a565b840191505092915050565b6000602082019050818103600083015261209e818461204b565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006120d1826120a6565b9050919050565b6120e1816120c6565b81146120ec57600080fd5b50565b6000813590506120fe816120d8565b92915050565b6000806040838503121561211b5761211a611f07565b5b6000612129858286016120ef565b925050602061213a85828601611f96565b9150509250929050565b61214d81611f6f565b82525050565b60006020820190506121686000830184612144565b92915050565b6000612179826120a6565b9050919050565b6121898161216e565b811461219457600080fd5b50565b6000813590506121a681612180565b92915050565b6000602082840312156121c2576121c1611f07565b5b60006121d084828501612197565b91505092915050565b6121e281611f0c565b82525050565b60008115159050919050565b6121fd816121e8565b82525050565b60006080820190506122186000830187612144565b61222560208301866121d9565b6122326040830185612144565b61223f60608301846121f4565b95945050505050565b600060208201905061225d60008301846121d9565b92915050565b60006020828403121561227957612278611f07565b5b6000612287848285016120ef565b91505092915050565b6122998161216e565b82525050565b60006020820190506122b46000830184612290565b92915050565b60006020820190506122cf60008301846121f4565b92915050565b600080604083850312156122ec576122eb611f07565b5b60006122fa858286016120ef565b925050602061230b85828601611f2d565b9150509250929050565b7f43616c6c6572206973206e6f742073746f636b686f6c64657200000000000000600082015250565b600061234b601983611ff6565b915061235682612315565b602082019050919050565b6000602082019050818103600083015261237a8161233e565b9050919050565b7f596f75206861766520616c726561647920766f74656400000000000000000000600082015250565b60006123b7601683611ff6565b91506123c282612381565b602082019050919050565b600060208201905081810360008301526123e6816123aa565b9050919050565b7f54686973206469766964656e6420616d6f756e74206861736e2774206265656e60008201527f2070726f706f7365640000000000000000000000000000000000000000000000602082015250565b6000612449602983611ff6565b9150612454826123ed565b604082019050919050565b600060208201905081810360008301526124788161243c565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006124b982611f0c565b91506124c483611f0c565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156124f9576124f861247f565b5b828201905092915050565b7f566f74696e672074696d65206861736e277420636f6d65000000000000000000600082015250565b600061253a601783611ff6565b915061254582612504565b602082019050919050565b600060208201905081810360008301526125698161252d565b9050919050565b7f566f74696e672074696d6520666f722074686973206d656574696e672068617360008201527f20656e6465640000000000000000000000000000000000000000000000000000602082015250565b60006125cc602683611ff6565b91506125d782612570565b604082019050919050565b600060208201905081810360008301526125fb816125bf565b9050919050565b600061260d82611f6f565b915061261883611f6f565b92508263ffffffff038211156126315761263061247f565b5b828201905092915050565b7f596f752061726520747279696e6720746f206372656174652073656c6c206f7260008201527f64657220666f72206d6f72652073746f636b73207468616e20796f752068617660208201527f6500000000000000000000000000000000000000000000000000000000000000604082015250565b60006126be604183611ff6565b91506126c98261263c565b606082019050919050565b600060208201905081810360008301526126ed816126b1565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061273b57607f821691505b60208210810361274e5761274d6126f4565b5b50919050565b7f417474656d7074656420746f20627579206d6f72652073746f636b732074686160008201527f6e2073656c6c65722069732077696c6c696e6720746f2073656c6c0000000000602082015250565b60006127b0603b83611ff6565b91506127bb82612754565b604082019050919050565b600060208201905081810360008301526127df816127a3565b9050919050565b60006127f182611f0c565b91506127fc83611f0c565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156128355761283461247f565b5b828202905092915050565b7f596f75206469646e27742073656e6420656e6f756768206d6f6e657920746f2060008201527f6275792073746f636b7300000000000000000000000000000000000000000000602082015250565b600061289c602a83611ff6565b91506128a782612840565b604082019050919050565b600060208201905081810360008301526128cb8161288f565b9050919050565b60006128dd82611f6f565b91506128e883611f6f565b9250828210156128fb576128fa61247f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600061294082611f0c565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036129725761297161247f565b5b600182019050919050565b600061298882611f0c565b915061299383611f0c565b9250828210156129a6576129a561247f565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f43616c6c6572206973206e6f74206469726563746f7200000000000000000000600082015250565b6000612a16601683611ff6565b9150612a21826129e0565b602082019050919050565b60006020820190508181036000830152612a4581612a09565b9050919050565b7f596f752063616e27742077697468647261772066756e647320647572696e672060008201527f746865206d656574696e672c20626563617573652069742063616e206d616b6560208201527f206469766964656e647320696d706f737369626c6520746f2070617900000000604082015250565b6000612ace605c83611ff6565b9150612ad982612a4c565b606082019050919050565b60006020820190508181036000830152612afd81612ac1565b9050919050565b7f596f752061726520747279696e6720746f206372656174652073656c6c206f7260008201527f64657220666f72206d6f72652073746f636b73207468616e2074686520636f6d60208201527f70616e7920686173000000000000000000000000000000000000000000000000604082015250565b6000612b86604883611ff6565b9150612b9182612b04565b606082019050919050565b60006020820190508181036000830152612bb581612b79565b9050919050565b7f50726f706f73616c2074696d6520666f722074686973206d656574696e67206860008201527f617320656e646564000000000000000000000000000000000000000000000000602082015250565b6000612c18602883611ff6565b9150612c2382612bbc565b604082019050919050565b60006020820190508181036000830152612c4781612c0b565b9050919050565b7f4d656574696e672074696d65206861736e277420636f6d650000000000000000600082015250565b6000612c84601883611ff6565b9150612c8f82612c4e565b602082019050919050565b60006020820190508181036000830152612cb381612c77565b9050919050565b7f436f6d70616e7920646f65736e2774206861766520656e6f756768206d6f6e6560008201527f7920746f207061792074686174206c61726765206469766964656e6473000000602082015250565b6000612d16603d83611ff6565b9150612d2182612cba565b604082019050919050565b60006020820190508181036000830152612d4581612d09565b9050919050565b7f4469766964656e647320706179696e672074696d65206861736e277420636f6d60008201527f6500000000000000000000000000000000000000000000000000000000000000602082015250565b6000612da8602183611ff6565b9150612db382612d4c565b604082019050919050565b60006020820190508181036000830152612dd781612d9b565b9050919050565b7f4469766964656e64732063616e206f6e6c79206265207061696420617420746860008201527f6520656e64206f662061206d656574696e670000000000000000000000000000602082015250565b6000612e3a603283611ff6565b9150612e4582612dde565b604082019050919050565b60006020820190508181036000830152612e6981612e2d565b9050919050565b7f416d6f756e74206973206c6172676572207468616e2062616c616e6365000000600082015250565b6000612ea6601d83611ff6565b9150612eb182612e70565b602082019050919050565b60006020820190508181036000830152612ed581612e99565b905091905056fea264697066735822122023f1562cdf88c3ecbbe1b8e30945e92fffa1aceae5ae259aa8155f29755b602b64736f6c634300080d0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:4290:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "378:49:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "388:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "403:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "410:10:1",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "399:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "399:22:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "388:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "360:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "370:7:1",
                "type": ""
              }
            ],
            "src": "334:93:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "475:78:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "531:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "540:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "543:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "533:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "533:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "533:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "498:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "522:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint32",
                              "nodeType": "YulIdentifier",
                              "src": "505:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "505:23:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "495:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "495:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "488:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "488:42:1"
                  },
                  "nodeType": "YulIf",
                  "src": "485:62:1"
                }
              ]
            },
            "name": "validator_revert_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "468:5:1",
                "type": ""
              }
            ],
            "src": "433:120:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "621:79:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "631:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "646:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "640:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "640:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "631:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "688:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "662:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "662:32:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "662:32:1"
                }
              ]
            },
            "name": "abi_decode_t_uint32_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "599:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "607:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "615:5:1",
                "type": ""
              }
            ],
            "src": "559:141:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "795:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "812:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "815:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "805:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "805:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "805:12:1"
                }
              ]
            },
            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
            "nodeType": "YulFunctionDefinition",
            "src": "706:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "918:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "935:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "938:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "928:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "928:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "928:12:1"
                }
              ]
            },
            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
            "nodeType": "YulFunctionDefinition",
            "src": "829:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1000:54:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1010:38:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1028:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1035:2:1",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1024:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1024:14:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1044:2:1",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "1040:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1040:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1020:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1020:28:1"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "1010:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "983:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "993:6:1",
                "type": ""
              }
            ],
            "src": "952:102:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1088:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1105:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1108:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1098:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1098:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1202:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1205:4:1",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1195:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1195:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1226:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1229:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "1219:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1219:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1219:15:1"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "1060:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1289:238:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1299:58:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1321:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "size",
                            "nodeType": "YulIdentifier",
                            "src": "1351:4:1"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "1329:21:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1329:27:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1317:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1317:40:1"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1303:10:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1468:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1470:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1470:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1470:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1411:10:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1423:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1408:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1408:34:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1447:10:1"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1459:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1444:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1444:22:1"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1405:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1405:62:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1402:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1506:2:1",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1510:10:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1499:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1499:22:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1499:22:1"
                }
              ]
            },
            "name": "finalize_allocation",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1275:6:1",
                "type": ""
              },
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1283:4:1",
                "type": ""
              }
            ],
            "src": "1246:281:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1574:88:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1584:30:1",
                  "value": {
                    "arguments": [],
                    "functionName": {
                      "name": "allocate_unbounded",
                      "nodeType": "YulIdentifier",
                      "src": "1594:18:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1594:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "1584:6:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1643:6:1"
                      },
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1651:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "finalize_allocation",
                      "nodeType": "YulIdentifier",
                      "src": "1623:19:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1623:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1623:33:1"
                }
              ]
            },
            "name": "allocate_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1558:4:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "1567:6:1",
                "type": ""
              }
            ],
            "src": "1533:129:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1735:241:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1840:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1842:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1842:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1842:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1812:6:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1820:18:1",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1809:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1809:30:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1806:56:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1872:37:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1902:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "round_up_to_mul_of_32",
                      "nodeType": "YulIdentifier",
                      "src": "1880:21:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1880:29:1"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1872:4:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1946:23:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "size",
                        "nodeType": "YulIdentifier",
                        "src": "1958:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1964:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1954:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1954:15:1"
                  },
                  "variableNames": [
                    {
                      "name": "size",
                      "nodeType": "YulIdentifier",
                      "src": "1946:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_allocation_size_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1719:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "size",
                "nodeType": "YulTypedName",
                "src": "1730:4:1",
                "type": ""
              }
            ],
            "src": "1668:308:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2031:258:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2041:10:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2050:1:1",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2045:1:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2110:63:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2135:3:1"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2140:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2131:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2131:11:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2154:3:1"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2159:1:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2150:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2150:11:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2144:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2144:18:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2124:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2124:39:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2124:39:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2071:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2074:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2068:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2068:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2082:19:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2084:15:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2093:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2096:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2089:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2089:10:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2084:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2064:3:1",
                    "statements": []
                  },
                  "src": "2060:113:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2207:76:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2257:3:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2262:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2253:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2253:16:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2271:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2246:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2246:27:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2246:27:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2188:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2191:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2185:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2185:13:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2182:101:1"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2013:3:1",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2018:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2023:6:1",
                "type": ""
              }
            ],
            "src": "1982:307:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2390:326:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2400:75:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2467:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "array_allocation_size_t_string_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "2425:41:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2425:49:1"
                      }
                    ],
                    "functionName": {
                      "name": "allocate_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2409:15:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2409:66:1"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2400:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2491:5:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2498:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2484:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2484:21:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2484:21:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2514:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "array",
                        "nodeType": "YulIdentifier",
                        "src": "2529:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2536:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2525:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2525:16:1"
                  },
                  "variables": [
                    {
                      "name": "dst",
                      "nodeType": "YulTypedName",
                      "src": "2518:3:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2579:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
                            "nodeType": "YulIdentifier",
                            "src": "2581:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2581:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2581:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "src",
                            "nodeType": "YulIdentifier",
                            "src": "2560:3:1"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2565:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2556:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2556:16:1"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "2574:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2553:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2553:25:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2550:112:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "src",
                        "nodeType": "YulIdentifier",
                        "src": "2693:3:1"
                      },
                      {
                        "name": "dst",
                        "nodeType": "YulIdentifier",
                        "src": "2698:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2703:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2671:21:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2671:39:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2671:39:1"
                }
              ]
            },
            "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2363:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2368:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2376:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2384:5:1",
                "type": ""
              }
            ],
            "src": "2295:421:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2809:282:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2858:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
                            "nodeType": "YulIdentifier",
                            "src": "2860:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2860:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2860:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "2837:6:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2845:4:1",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2833:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2833:17:1"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "2852:3:1"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2829:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2829:27:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2822:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2822:35:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2819:122:1"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2950:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2970:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "2964:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2964:13:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2954:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2986:99:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3058:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3066:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3054:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3054:17:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3073:6:1"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "3081:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_available_length_t_string_memory_ptr_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "2995:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2995:90:1"
                  },
                  "variableNames": [
                    {
                      "name": "array",
                      "nodeType": "YulIdentifier",
                      "src": "2986:5:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "2787:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2795:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "array",
                "nodeType": "YulTypedName",
                "src": "2803:5:1",
                "type": ""
              }
            ],
            "src": "2736:355:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3200:575:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3246:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3248:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3248:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3248:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3221:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3230:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3217:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3217:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3242:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3213:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3213:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3210:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3339:127:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3354:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3368:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3358:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3383:73:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3428:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3439:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3424:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3424:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3448:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3393:30:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3393:63:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "3383:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "3476:292:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "3491:39:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3515:9:1"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3526:2:1",
                                "type": "",
                                "value": "32"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3511:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3511:18:1"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "3505:5:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3505:25:1"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "3495:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "body": {
                        "nodeType": "YulBlock",
                        "src": "3577:83:1",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [],
                              "functionName": {
                                "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
                                "nodeType": "YulIdentifier",
                                "src": "3579:77:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3579:79:1"
                            },
                            "nodeType": "YulExpressionStatement",
                            "src": "3579:79:1"
                          }
                        ]
                      },
                      "condition": {
                        "arguments": [
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3549:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3557:18:1",
                            "type": "",
                            "value": "0xffffffffffffffff"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "3546:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3546:30:1"
                      },
                      "nodeType": "YulIf",
                      "src": "3543:117:1"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "3674:84:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "3730:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "3741:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "3726:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3726:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3750:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_string_memory_ptr_fromMemory",
                          "nodeType": "YulIdentifier",
                          "src": "3684:41:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3684:74:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "3674:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint32t_string_memory_ptr_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3162:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3173:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3185:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3193:6:1",
                "type": ""
              }
            ],
            "src": "3097:678:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3809:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3826:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3829:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3819:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3819:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3819:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3923:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3926:4:1",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3916:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3916:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3916:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3947:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3950:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "3940:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3940:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3940:15:1"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "3781:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4018:269:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4028:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4042:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4048:1:1",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "4038:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4038:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "4028:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4059:38:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "4089:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4095:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "4085:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4085:12:1"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "4063:18:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4136:51:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "4150:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "4164:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4172:4:1",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "4160:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4160:17:1"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4150:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4116:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4109:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4109:26:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4106:81:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4239:42:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "4253:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4253:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4253:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "4203:18:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "4226:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4234:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "4223:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4223:14:1"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "4200:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4200:38:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4197:84:1"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "4002:4:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "4011:6:1",
                "type": ""
              }
            ],
            "src": "3967:320:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint32t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint32_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:27945:1",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:1",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:1",
                "type": ""
              }
            ],
            "src": "7:75:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:1"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:1",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:1"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:32:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:16:1",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "400:5:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:1",
                "type": ""
              }
            ],
            "src": "334:77:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "460:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "517:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "526:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "529:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "519:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "519:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "519:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "483:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "508:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint256",
                              "nodeType": "YulIdentifier",
                              "src": "490:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "490:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "480:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "480:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "473:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "473:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "470:63:1"
                }
              ]
            },
            "name": "validator_revert_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "453:5:1",
                "type": ""
              }
            ],
            "src": "417:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "597:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "607:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "629:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "616:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "616:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "607:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "672:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "645:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "645:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "645:33:1"
                }
              ]
            },
            "name": "abi_decode_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "575:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "583:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "591:5:1",
                "type": ""
              }
            ],
            "src": "545:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "756:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "802:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "804:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "804:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "804:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "777:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "786:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "773:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "773:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "798:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "769:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "769:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "766:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "895:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "910:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "924:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "914:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "939:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "974:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "985:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "970:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "970:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "994:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "949:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "949:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "939:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "726:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "737:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "749:6:1",
                "type": ""
              }
            ],
            "src": "690:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1069:49:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1079:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1094:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1101:10:1",
                        "type": "",
                        "value": "0xffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "1090:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1090:22:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1079:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1051:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1061:7:1",
                "type": ""
              }
            ],
            "src": "1025:93:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1166:78:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1222:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1231:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1234:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1224:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1224:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1224:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1189:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "1213:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_uint32",
                              "nodeType": "YulIdentifier",
                              "src": "1196:16:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1196:23:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1186:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1186:34:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1179:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1179:42:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1176:62:1"
                }
              ]
            },
            "name": "validator_revert_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1159:5:1",
                "type": ""
              }
            ],
            "src": "1124:120:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1301:86:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1311:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1333:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1320:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1320:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "1311:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1375:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "1349:25:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1349:32:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1349:32:1"
                }
              ]
            },
            "name": "abi_decode_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "1279:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "1287:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1295:5:1",
                "type": ""
              }
            ],
            "src": "1250:137:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1475:390:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1521:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "1523:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1523:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1523:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1496:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1505:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1492:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1492:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1517:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1488:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1488:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "1485:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1614:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1629:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1643:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1633:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1658:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1693:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1704:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1689:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1689:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1713:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1668:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1668:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1658:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1741:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1756:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1770:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1760:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1786:62:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1820:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1831:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1816:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1816:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1840:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "1796:19:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1796:52:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "1786:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1437:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1448:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1460:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1468:6:1",
                "type": ""
              }
            ],
            "src": "1393:472:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1930:40:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1941:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1957:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1951:5:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1951:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1941:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_string_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1913:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1923:6:1",
                "type": ""
              }
            ],
            "src": "1871:99:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2072:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2089:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2094:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2082:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2082:19:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2082:19:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2110:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2129:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2134:4:1",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2125:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2125:14:1"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "2110:11:1"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2044:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2049:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "2060:11:1",
                "type": ""
              }
            ],
            "src": "1976:169:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2200:258:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2210:10:1",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2219:1:1",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "2214:1:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2279:63:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2304:3:1"
                                },
                                {
                                  "name": "i",
                                  "nodeType": "YulIdentifier",
                                  "src": "2309:1:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2300:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2300:11:1"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "src",
                                      "nodeType": "YulIdentifier",
                                      "src": "2323:3:1"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "2328:1:1"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "2319:3:1"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "2319:11:1"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "2313:5:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2313:18:1"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2293:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2293:39:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2293:39:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2240:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2243:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "2237:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2237:13:1"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "2251:19:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "2253:15:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "2262:1:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2265:2:1",
                              "type": "",
                              "value": "32"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "2258:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2258:10:1"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "2253:1:1"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "2233:3:1",
                    "statements": []
                  },
                  "src": "2229:113:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2376:76:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2426:3:1"
                                },
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "2431:6:1"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "2422:3:1"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2422:16:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2440:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2415:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2415:27:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2415:27:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "2357:1:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2360:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2354:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2354:13:1"
                  },
                  "nodeType": "YulIf",
                  "src": "2351:101:1"
                }
              ]
            },
            "name": "copy_memory_to_memory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "src",
                "nodeType": "YulTypedName",
                "src": "2182:3:1",
                "type": ""
              },
              {
                "name": "dst",
                "nodeType": "YulTypedName",
                "src": "2187:3:1",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "2192:6:1",
                "type": ""
              }
            ],
            "src": "2151:307:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2512:54:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2522:38:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2540:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2547:2:1",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2536:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2536:14:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2556:2:1",
                            "type": "",
                            "value": "31"
                          }
                        ],
                        "functionName": {
                          "name": "not",
                          "nodeType": "YulIdentifier",
                          "src": "2552:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2552:7:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "2532:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2532:28:1"
                  },
                  "variableNames": [
                    {
                      "name": "result",
                      "nodeType": "YulIdentifier",
                      "src": "2522:6:1"
                    }
                  ]
                }
              ]
            },
            "name": "round_up_to_mul_of_32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2495:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "result",
                "nodeType": "YulTypedName",
                "src": "2505:6:1",
                "type": ""
              }
            ],
            "src": "2464:102:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2664:272:1",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2674:53:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2721:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_string_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "2688:32:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2688:39:1"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2678:6:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2736:78:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2802:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2807:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "2743:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2743:71:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "2736:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2849:5:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2856:4:1",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2845:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2845:16:1"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2863:3:1"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2868:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "copy_memory_to_memory",
                      "nodeType": "YulIdentifier",
                      "src": "2823:21:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2823:52:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2823:52:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2884:46:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2895:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "2922:6:1"
                          }
                        ],
                        "functionName": {
                          "name": "round_up_to_mul_of_32",
                          "nodeType": "YulIdentifier",
                          "src": "2900:21:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2900:29:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2891:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2891:39:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "2884:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2645:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2652:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "2660:3:1",
                "type": ""
              }
            ],
            "src": "2572:364:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3060:195:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3070:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3082:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3093:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3078:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3078:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3070:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3117:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3128:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3113:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3113:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "3136:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3142:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3132:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3132:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3106:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3106:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3106:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3162:86:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3234:6:1"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "3243:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "3170:63:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3170:78:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3162:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3032:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3044:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3055:4:1",
                "type": ""
              }
            ],
            "src": "2942:313:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3306:81:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3316:65:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3331:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3338:42:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "3327:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3327:54:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3316:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3288:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3298:7:1",
                "type": ""
              }
            ],
            "src": "3261:126:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3446:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3456:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3485:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "3467:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3467:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "3456:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3428:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "3438:7:1",
                "type": ""
              }
            ],
            "src": "3393:104:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3554:87:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3619:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3628:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3631:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3621:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3621:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3621:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3577:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3610:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address_payable",
                              "nodeType": "YulIdentifier",
                              "src": "3584:25:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3584:32:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3574:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3574:43:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3567:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3567:51:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3564:71:1"
                }
              ]
            },
            "name": "validator_revert_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3547:5:1",
                "type": ""
              }
            ],
            "src": "3503:138:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3707:95:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3717:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3739:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3726:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3726:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "3717:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3790:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address_payable",
                      "nodeType": "YulIdentifier",
                      "src": "3755:34:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3755:41:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3755:41:1"
                }
              ]
            },
            "name": "abi_decode_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "3685:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3693:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3701:5:1",
                "type": ""
              }
            ],
            "src": "3647:155:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3898:398:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3944:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "3946:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3946:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3946:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3919:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3928:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3915:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3915:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3940:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3911:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3911:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "3908:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4037:125:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4052:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4066:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4056:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4081:71:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4124:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4135:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4120:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4120:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4144:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "4091:28:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4091:61:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "4081:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4172:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4187:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4201:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "4191:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4217:62:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "4251:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "4262:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4247:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4247:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4271:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "4227:19:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4227:52:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "4217:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3860:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3871:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3883:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3891:6:1",
                "type": ""
              }
            ],
            "src": "3808:488:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4365:52:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4382:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4404:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint32",
                          "nodeType": "YulIdentifier",
                          "src": "4387:16:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4387:23:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4375:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4375:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4375:36:1"
                }
              ]
            },
            "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4353:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4360:3:1",
                "type": ""
              }
            ],
            "src": "4302:115:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4519:122:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4529:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4541:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4552:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4537:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4537:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4529:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "4607:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4620:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4631:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4616:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4616:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "4565:41:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4565:69:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4565:69:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4491:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4503:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4514:4:1",
                "type": ""
              }
            ],
            "src": "4423:218:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4692:51:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4702:35:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4731:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "4713:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4713:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "4702:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4674:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "4684:7:1",
                "type": ""
              }
            ],
            "src": "4647:96:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4792:79:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4849:16:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4858:1:1",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4861:1:1",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4851:6:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4851:12:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4851:12:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "4815:5:1"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4840:5:1"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "4822:17:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4822:24:1"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "4812:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4812:35:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4805:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4805:43:1"
                  },
                  "nodeType": "YulIf",
                  "src": "4802:63:1"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4785:5:1",
                "type": ""
              }
            ],
            "src": "4749:122:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4929:87:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4939:29:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "4961:6:1"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4948:12:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4948:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "4939:5:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5004:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "4977:26:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4977:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4977:33:1"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "4907:6:1",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4915:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4923:5:1",
                "type": ""
              }
            ],
            "src": "4877:139:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5088:263:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5134:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "5136:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5136:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5136:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5109:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5118:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5105:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5105:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5130:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5101:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5101:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "5098:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "5227:117:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "5242:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5256:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "5246:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "5271:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "5306:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "5317:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "5302:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5302:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5326:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "5281:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5281:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "5271:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5058:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5069:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5081:6:1",
                "type": ""
              }
            ],
            "src": "5022:329:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5422:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5439:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5462:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "5444:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5444:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5432:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5432:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5432:37:1"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5410:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5417:3:1",
                "type": ""
              }
            ],
            "src": "5357:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5523:48:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5533:32:1",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5558:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "5551:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5551:13:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "5544:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5544:21:1"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "5533:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5505:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "5515:7:1",
                "type": ""
              }
            ],
            "src": "5481:90:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5636:50:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "5653:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "5673:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_bool",
                          "nodeType": "YulIdentifier",
                          "src": "5658:14:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5658:21:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5646:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5646:34:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5646:34:1"
                }
              ]
            },
            "name": "abi_encode_t_bool_to_t_bool_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "5624:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "5631:3:1",
                "type": ""
              }
            ],
            "src": "5577:109:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5864:361:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5874:27:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5886:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5897:3:1",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5882:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5882:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5874:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5953:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5966:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5977:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5962:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5962:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5911:41:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5911:69:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5911:69:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6034:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6047:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6058:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6043:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6043:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5990:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5990:72:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5990:72:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "6114:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6127:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6138:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6123:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6123:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint32_to_t_uint32_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6072:41:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6072:70:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6072:70:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value3",
                        "nodeType": "YulIdentifier",
                        "src": "6190:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6203:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6214:2:1",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6199:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6199:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6152:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6152:66:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6152:66:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint32_t_uint256_t_uint32_t_bool__to_t_uint32_t_uint256_t_uint32_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5812:9:1",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "5824:6:1",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "5832:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5840:6:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5848:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5859:4:1",
                "type": ""
              }
            ],
            "src": "5692:533:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6329:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6339:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6351:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6362:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6347:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6347:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6339:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6419:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6432:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6443:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6428:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6428:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_uint256_to_t_uint256_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "6375:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6375:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6375:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6301:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6313:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6324:4:1",
                "type": ""
              }
            ],
            "src": "6231:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6533:271:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6579:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "6581:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6581:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6581:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6554:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6563:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6550:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6550:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6575:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6546:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6546:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "6543:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "6672:125:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "6687:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6701:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "6691:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "6716:71:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "6759:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "6770:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "6755:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6755:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6779:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "6726:28:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6726:61:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "6716:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payable",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6503:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6514:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6526:6:1",
                "type": ""
              }
            ],
            "src": "6459:345:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6875:53:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "6892:3:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6915:5:1"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "6897:17:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6897:24:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6885:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6885:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6885:37:1"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "6863:5:1",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "6870:3:1",
                "type": ""
              }
            ],
            "src": "6810:118:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7032:124:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7042:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7054:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7065:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7050:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7050:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7042:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7122:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7135:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7146:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7131:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7131:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_address_to_t_address_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7078:43:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7078:71:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7078:71:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7004:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7016:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7027:4:1",
                "type": ""
              }
            ],
            "src": "6934:222:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7254:118:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "7264:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7276:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7287:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7272:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7272:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7264:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7338:6:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7351:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7362:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7347:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7347:17:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_bool_to_t_bool_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "7300:37:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7300:65:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7300:65:1"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7226:9:1",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7238:6:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7249:4:1",
                "type": ""
              }
            ],
            "src": "7162:210:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7469:399:1",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7515:83:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "7517:77:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7517:79:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7517:79:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7490:7:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7499:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7486:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7486:23:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7511:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7482:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7482:32:1"
                  },
                  "nodeType": "YulIf",
                  "src": "7479:119:1"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7608:125:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7623:15:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7637:1:1",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7627:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7652:71:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7695:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7706:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7691:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7691:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7715:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address_payable",
                          "nodeType": "YulIdentifier",
                          "src": "7662:28:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7662:61:1"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "7652:6:1"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "7743:118:1",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "7758:16:1",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7772:2:1",
                        "type": "",
                        "value": "32"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "7762:6:1",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "7788:63:1",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7823:9:1"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "7834:6:1"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7819:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7819:22:1"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7843:7:1"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "7798:20:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7798:53:1"
                      },
                      "variableNames": [
                        {
                          "name": "value1",
                          "nodeType": "YulIdentifier",
                          "src": "7788:6:1"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_payablet_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7431:9:1",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7442:7:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7454:6:1",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "7462:6:1",
                "type": ""
              }
            ],
            "src": "7378:490:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7980:69:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8002:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8010:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7998:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7998:14:1"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742073746f636b686f6c646572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8014:27:1",
                        "type": "",
                        "value": "Caller is not stockholder"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7991:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7991:51:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7991:51:1"
                }
              ]
            },
            "name": "store_literal_in_memory_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "7972:6:1",
                "type": ""
              }
            ],
            "src": "7874:175:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8201:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8211:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8277:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8282:2:1",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8218:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8218:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "8211:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8383:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046",
                      "nodeType": "YulIdentifier",
                      "src": "8294:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8294:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8294:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8396:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "8407:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8412:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8403:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8403:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "8396:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "8189:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "8197:3:1",
                "type": ""
              }
            ],
            "src": "8055:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8598:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8608:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8620:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8631:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8616:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8616:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8608:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8655:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8666:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8651:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8651:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "8674:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8680:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8670:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8670:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8644:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8644:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8644:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8700:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "8834:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "8708:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8708:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8700:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8578:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8593:4:1",
                "type": ""
              }
            ],
            "src": "8427:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8958:66:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "8980:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8988:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8976:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8976:14:1"
                      },
                      {
                        "hexValue": "596f75206861766520616c726561647920766f746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8992:24:1",
                        "type": "",
                        "value": "You have already voted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8969:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8969:48:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8969:48:1"
                }
              ]
            },
            "name": "store_literal_in_memory_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "8950:6:1",
                "type": ""
              }
            ],
            "src": "8852:172:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9176:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9186:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9252:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9257:2:1",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9193:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9193:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "9186:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9358:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
                      "nodeType": "YulIdentifier",
                      "src": "9269:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9269:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9269:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9371:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "9382:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9387:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9378:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9378:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "9371:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "9164:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "9172:3:1",
                "type": ""
              }
            ],
            "src": "9030:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9573:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "9583:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9595:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9606:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9591:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9591:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9583:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9630:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9641:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9626:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9626:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "9649:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9655:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9645:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9645:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9619:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9619:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9619:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9675:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "9809:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "9683:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9683:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9675:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9553:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9568:4:1",
                "type": ""
              }
            ],
            "src": "9402:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9933:122:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "9955:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9963:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9951:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9951:14:1"
                      },
                      {
                        "hexValue": "54686973206469766964656e6420616d6f756e74206861736e2774206265656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9967:34:1",
                        "type": "",
                        "value": "This dividend amount hasn't been"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9944:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9944:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9944:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "10023:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10031:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10019:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10019:15:1"
                      },
                      {
                        "hexValue": "2070726f706f736564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10036:11:1",
                        "type": "",
                        "value": " proposed"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10012:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10012:36:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10012:36:1"
                }
              ]
            },
            "name": "store_literal_in_memory_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "9925:6:1",
                "type": ""
              }
            ],
            "src": "9827:228:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10207:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10217:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10283:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10288:2:1",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10224:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10224:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "10217:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10389:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2",
                      "nodeType": "YulIdentifier",
                      "src": "10300:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10300:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10300:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10402:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "10413:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10418:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10409:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10409:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "10402:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "10195:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "10203:3:1",
                "type": ""
              }
            ],
            "src": "10061:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10604:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10614:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10626:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10637:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10622:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10622:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10614:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10661:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10672:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10657:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10657:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "10680:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10686:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "10676:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10676:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10650:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10650:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10650:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10706:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "10840:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "10714:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10714:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10706:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10584:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10599:4:1",
                "type": ""
              }
            ],
            "src": "10433:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10886:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10903:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10906:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10896:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10896:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10896:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11000:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11003:4:1",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10993:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10993:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10993:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11024:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11027:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "11017:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11017:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11017:15:1"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "10858:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11088:261:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11098:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11121:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11103:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11103:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "11098:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11132:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11155:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "11137:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11137:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "11132:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "11295:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "11297:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "11297:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "11297:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11216:1:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11223:66:1",
                            "type": "",
                            "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "11291:1:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "11219:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11219:74:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "11213:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11213:81:1"
                  },
                  "nodeType": "YulIf",
                  "src": "11210:107:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11327:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "11338:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "11341:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11334:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11334:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "11327:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "11075:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "11078:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "11084:3:1",
                "type": ""
              }
            ],
            "src": "11044:305:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11461:67:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "11483:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11491:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11479:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11479:14:1"
                      },
                      {
                        "hexValue": "566f74696e672074696d65206861736e277420636f6d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11495:25:1",
                        "type": "",
                        "value": "Voting time hasn't come"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11472:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11472:49:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11472:49:1"
                }
              ]
            },
            "name": "store_literal_in_memory_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "11453:6:1",
                "type": ""
              }
            ],
            "src": "11355:173:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11680:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "11690:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11756:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11761:2:1",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "11697:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11697:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "11690:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11862:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac",
                      "nodeType": "YulIdentifier",
                      "src": "11773:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11773:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11773:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11875:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "11886:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11891:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11882:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11882:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "11875:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "11668:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "11676:3:1",
                "type": ""
              }
            ],
            "src": "11534:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12077:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12087:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12099:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12110:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12095:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12095:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12087:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12134:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12145:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12130:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12130:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "12153:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12159:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "12149:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12149:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12123:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12123:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12123:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12179:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "12313:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12187:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12187:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12179:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12057:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12072:4:1",
                "type": ""
              }
            ],
            "src": "11906:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12437:119:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12459:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12467:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12455:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12455:14:1"
                      },
                      {
                        "hexValue": "566f74696e672074696d6520666f722074686973206d656574696e6720686173",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12471:34:1",
                        "type": "",
                        "value": "Voting time for this meeting has"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12448:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12448:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12448:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "12527:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12535:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12523:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12523:15:1"
                      },
                      {
                        "hexValue": "20656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12540:8:1",
                        "type": "",
                        "value": " ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12516:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12516:33:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12516:33:1"
                }
              ]
            },
            "name": "store_literal_in_memory_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "12429:6:1",
                "type": ""
              }
            ],
            "src": "12331:225:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12708:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "12718:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12784:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12789:2:1",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "12725:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12725:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "12718:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12890:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520",
                      "nodeType": "YulIdentifier",
                      "src": "12801:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12801:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12801:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12903:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "12914:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12919:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12910:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12910:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "12903:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "12696:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "12704:3:1",
                "type": ""
              }
            ],
            "src": "12562:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13105:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13115:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13127:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13138:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13123:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13123:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13115:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13162:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13173:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13158:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13158:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "13181:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13187:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13177:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13177:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13151:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13151:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13151:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13207:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "13341:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "13215:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13215:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13207:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13085:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13100:4:1",
                "type": ""
              }
            ],
            "src": "12934:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13402:203:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "13412:24:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13434:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "13417:16:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13417:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "13412:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13445:24:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13467:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "13450:16:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13450:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "13445:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "13551:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "13553:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "13553:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "13553:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13528:1:1"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13535:10:1",
                            "type": "",
                            "value": "0xffffffff"
                          },
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "13547:1:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "13531:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13531:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "13525:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13525:25:1"
                  },
                  "nodeType": "YulIf",
                  "src": "13522:51:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13583:16:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "13594:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "13597:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13590:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13590:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "13583:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_add_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "13389:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "13392:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "13398:3:1",
                "type": ""
              }
            ],
            "src": "13359:246:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13717:183:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13739:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13747:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13735:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13735:14:1"
                      },
                      {
                        "hexValue": "596f752061726520747279696e6720746f206372656174652073656c6c206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13751:34:1",
                        "type": "",
                        "value": "You are trying to create sell or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13728:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13728:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13728:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13807:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13815:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13803:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13803:15:1"
                      },
                      {
                        "hexValue": "64657220666f72206d6f72652073746f636b73207468616e20796f7520686176",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13820:34:1",
                        "type": "",
                        "value": "der for more stocks than you hav"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13796:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13796:59:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13796:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "13876:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13884:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13872:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13872:15:1"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13889:3:1",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13865:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13865:28:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13865:28:1"
                }
              ]
            },
            "name": "store_literal_in_memory_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "13709:6:1",
                "type": ""
              }
            ],
            "src": "13611:289:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14052:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14062:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14128:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14133:2:1",
                        "type": "",
                        "value": "65"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14069:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14069:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "14062:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14234:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826",
                      "nodeType": "YulIdentifier",
                      "src": "14145:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14145:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14145:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14247:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "14258:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14263:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14254:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14254:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "14247:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "14040:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "14048:3:1",
                "type": ""
              }
            ],
            "src": "13906:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14449:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14459:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "14471:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14482:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "14467:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14467:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14459:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14506:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "14517:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "14502:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14502:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "14525:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "14531:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "14521:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "14521:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14495:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14495:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14495:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "14551:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "14685:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "14559:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14559:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "14551:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "14429:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "14444:4:1",
                "type": ""
              }
            ],
            "src": "14278:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14731:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14748:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14751:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14741:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14741:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14741:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14845:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14848:4:1",
                        "type": "",
                        "value": "0x22"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "14838:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14838:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14838:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14869:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14872:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "14862:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14862:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "14862:15:1"
                }
              ]
            },
            "name": "panic_error_0x22",
            "nodeType": "YulFunctionDefinition",
            "src": "14703:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "14940:269:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "14950:22:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "14964:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "14970:1:1",
                        "type": "",
                        "value": "2"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "14960:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "14960:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "14950:6:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "14981:38:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "data",
                        "nodeType": "YulIdentifier",
                        "src": "15011:4:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15017:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "15007:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15007:12:1"
                  },
                  "variables": [
                    {
                      "name": "outOfPlaceEncoding",
                      "nodeType": "YulTypedName",
                      "src": "14985:18:1",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15058:51:1",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "15072:27:1",
                        "value": {
                          "arguments": [
                            {
                              "name": "length",
                              "nodeType": "YulIdentifier",
                              "src": "15086:6:1"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "15094:4:1",
                              "type": "",
                              "value": "0x7f"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "15082:3:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15082:17:1"
                        },
                        "variableNames": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "15072:6:1"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "15038:18:1"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "15031:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15031:26:1"
                  },
                  "nodeType": "YulIf",
                  "src": "15028:81:1"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "15161:42:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x22",
                            "nodeType": "YulIdentifier",
                            "src": "15175:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "15175:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "15175:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "outOfPlaceEncoding",
                        "nodeType": "YulIdentifier",
                        "src": "15125:18:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "15148:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15156:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "15145:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15145:14:1"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "15122:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15122:38:1"
                  },
                  "nodeType": "YulIf",
                  "src": "15119:84:1"
                }
              ]
            },
            "name": "extract_byte_array_length",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "14924:4:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "14933:6:1",
                "type": ""
              }
            ],
            "src": "14889:320:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15321:140:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15343:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15351:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15339:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15339:14:1"
                      },
                      {
                        "hexValue": "417474656d7074656420746f20627579206d6f72652073746f636b7320746861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15355:34:1",
                        "type": "",
                        "value": "Attempted to buy more stocks tha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15332:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15332:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15332:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "15411:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "15419:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "15407:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "15407:15:1"
                      },
                      {
                        "hexValue": "6e2073656c6c65722069732077696c6c696e6720746f2073656c6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "15424:29:1",
                        "type": "",
                        "value": "n seller is willing to sell"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "15400:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15400:54:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15400:54:1"
                }
              ]
            },
            "name": "store_literal_in_memory_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "15313:6:1",
                "type": ""
              }
            ],
            "src": "15215:246:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "15613:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "15623:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15689:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15694:2:1",
                        "type": "",
                        "value": "59"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "15630:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15630:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "15623:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15795:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262",
                      "nodeType": "YulIdentifier",
                      "src": "15706:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15706:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "15706:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "15808:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "15819:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "15824:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "15815:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "15815:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "15808:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "15601:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "15609:3:1",
                "type": ""
              }
            ],
            "src": "15467:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16010:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16020:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "16032:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "16043:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "16028:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16028:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16020:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16067:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16078:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16063:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16063:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "16086:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "16092:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "16082:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16082:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16056:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16056:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16056:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16112:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "16246:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "16120:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16120:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "16112:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "15990:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "16005:4:1",
                "type": ""
              }
            ],
            "src": "15839:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16312:300:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "16322:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16345:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16327:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16327:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "16322:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16356:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16379:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "16361:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16361:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "16356:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "16554:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "16556:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "16556:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "16556:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16466:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "16459:6:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16459:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "16452:6:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16452:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "y",
                            "nodeType": "YulIdentifier",
                            "src": "16474:1:1"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "16481:66:1",
                                "type": "",
                                "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                              },
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "16549:1:1"
                              }
                            ],
                            "functionName": {
                              "name": "div",
                              "nodeType": "YulIdentifier",
                              "src": "16477:3:1"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "16477:74:1"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "16471:2:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16471:81:1"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "16448:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16448:105:1"
                  },
                  "nodeType": "YulIf",
                  "src": "16445:131:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "16586:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "16601:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "16604:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "16597:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16597:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "16586:7:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "16295:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "16298:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "16304:7:1",
                "type": ""
              }
            ],
            "src": "16264:348:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16724:123:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16746:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16754:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16742:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16742:14:1"
                      },
                      {
                        "hexValue": "596f75206469646e27742073656e6420656e6f756768206d6f6e657920746f20",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16758:34:1",
                        "type": "",
                        "value": "You didn't send enough money to "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16735:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16735:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16735:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "16814:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "16822:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "16810:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "16810:15:1"
                      },
                      {
                        "hexValue": "6275792073746f636b73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "16827:12:1",
                        "type": "",
                        "value": "buy stocks"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "16803:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "16803:37:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "16803:37:1"
                }
              ]
            },
            "name": "store_literal_in_memory_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "16716:6:1",
                "type": ""
              }
            ],
            "src": "16618:229:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "16999:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17009:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17075:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17080:2:1",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17016:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17016:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "17009:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17181:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a",
                      "nodeType": "YulIdentifier",
                      "src": "17092:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17092:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17092:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17194:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "17205:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17210:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17201:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17201:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "17194:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "16987:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "16995:3:1",
                "type": ""
              }
            ],
            "src": "16853:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17396:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17406:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "17418:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17429:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "17414:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17414:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17406:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17453:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "17464:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "17449:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17449:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "17472:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "17478:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "17468:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "17468:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17442:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17442:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17442:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17498:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "17632:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "17506:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17506:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "17498:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "17376:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "17391:4:1",
                "type": ""
              }
            ],
            "src": "17225:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17694:144:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "17704:24:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17726:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "17709:16:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17709:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "17704:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17737:24:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17759:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint32",
                      "nodeType": "YulIdentifier",
                      "src": "17742:16:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17742:19:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "17737:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "17783:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "17785:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "17785:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "17785:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17777:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17780:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "17774:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17774:8:1"
                  },
                  "nodeType": "YulIf",
                  "src": "17771:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "17815:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "17827:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "17830:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "17823:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17823:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "17815:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "17680:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "17683:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "17689:4:1",
                "type": ""
              }
            ],
            "src": "17650:188:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "17872:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17889:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17892:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17882:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17882:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17882:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17986:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "17989:4:1",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "17979:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "17979:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "17979:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18010:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18013:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18003:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18003:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18003:15:1"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "17844:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18073:190:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18083:33:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18110:5:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18092:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18092:24:1"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "18083:5:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18206:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18208:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18208:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18208:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18131:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18138:66:1",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "eq",
                      "nodeType": "YulIdentifier",
                      "src": "18128:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18128:77:1"
                  },
                  "nodeType": "YulIf",
                  "src": "18125:103:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18237:20:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "18248:5:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18255:1:1",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "18244:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18244:13:1"
                  },
                  "variableNames": [
                    {
                      "name": "ret",
                      "nodeType": "YulIdentifier",
                      "src": "18237:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "increment_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "18059:5:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "ret",
                "nodeType": "YulTypedName",
                "src": "18069:3:1",
                "type": ""
              }
            ],
            "src": "18030:233:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18314:146:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18324:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18347:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18329:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18329:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "18324:1:1"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18358:25:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18381:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "18363:17:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18363:20:1"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "18358:1:1"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "18405:22:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "18407:16:1"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "18407:18:1"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "18407:18:1"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18399:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18402:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "18396:2:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18396:8:1"
                  },
                  "nodeType": "YulIf",
                  "src": "18393:34:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "18437:17:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "18449:1:1"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "18452:1:1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "18445:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18445:9:1"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "18437:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "18300:1:1",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "18303:1:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "18309:4:1",
                "type": ""
              }
            ],
            "src": "18269:191:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18494:152:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18511:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18514:77:1",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18504:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18504:88:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18504:88:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18608:1:1",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18611:4:1",
                        "type": "",
                        "value": "0x31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18601:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18601:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18601:15:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18632:1:1",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "18635:4:1",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "18625:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18625:15:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18625:15:1"
                }
              ]
            },
            "name": "panic_error_0x31",
            "nodeType": "YulFunctionDefinition",
            "src": "18466:180:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18758:66:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "18780:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "18788:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "18776:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "18776:14:1"
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206469726563746f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "18792:24:1",
                        "type": "",
                        "value": "Caller is not director"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "18769:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18769:48:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "18769:48:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "18750:6:1",
                "type": ""
              }
            ],
            "src": "18652:172:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "18976:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "18986:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19052:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19057:2:1",
                        "type": "",
                        "value": "22"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "18993:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "18993:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "18986:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19158:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5",
                      "nodeType": "YulIdentifier",
                      "src": "19069:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19069:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19069:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19171:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "19182:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19187:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19178:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19178:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "19171:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "18964:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "18972:3:1",
                "type": ""
              }
            ],
            "src": "18830:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19373:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "19383:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "19395:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "19406:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "19391:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19391:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19383:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19430:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19441:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19426:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19426:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "19449:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "19455:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "19445:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19445:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19419:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19419:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19419:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "19475:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "19609:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "19483:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19483:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "19475:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "19353:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "19368:4:1",
                "type": ""
              }
            ],
            "src": "19202:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "19733:210:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19755:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19763:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19751:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19751:14:1"
                      },
                      {
                        "hexValue": "596f752063616e27742077697468647261772066756e647320647572696e6720",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19767:34:1",
                        "type": "",
                        "value": "You can't withdraw funds during "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19744:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19744:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19744:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19823:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19831:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19819:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19819:15:1"
                      },
                      {
                        "hexValue": "746865206d656574696e672c20626563617573652069742063616e206d616b65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19836:34:1",
                        "type": "",
                        "value": "the meeting, because it can make"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19812:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19812:59:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19812:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "19892:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "19900:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "19888:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "19888:15:1"
                      },
                      {
                        "hexValue": "206469766964656e647320696d706f737369626c6520746f20706179",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "19905:30:1",
                        "type": "",
                        "value": " dividends impossible to pay"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "19881:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "19881:55:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "19881:55:1"
                }
              ]
            },
            "name": "store_literal_in_memory_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "19725:6:1",
                "type": ""
              }
            ],
            "src": "19627:316:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20095:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20105:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20171:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20176:2:1",
                        "type": "",
                        "value": "92"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20112:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20112:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "20105:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20277:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
                      "nodeType": "YulIdentifier",
                      "src": "20188:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20188:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20188:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20290:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "20301:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20306:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20297:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20297:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "20290:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "20083:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "20091:3:1",
                "type": ""
              }
            ],
            "src": "19949:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20492:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "20502:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "20514:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "20525:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "20510:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20510:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20502:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20549:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20560:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20545:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20545:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "20568:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "20574:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "20564:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20564:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20538:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20538:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20538:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "20594:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "20728:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "20602:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20602:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "20594:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "20472:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "20487:4:1",
                "type": ""
              }
            ],
            "src": "20321:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "20852:190:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20874:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20882:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20870:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20870:14:1"
                      },
                      {
                        "hexValue": "596f752061726520747279696e6720746f206372656174652073656c6c206f72",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20886:34:1",
                        "type": "",
                        "value": "You are trying to create sell or"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20863:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20863:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20863:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "20942:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "20950:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "20938:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "20938:15:1"
                      },
                      {
                        "hexValue": "64657220666f72206d6f72652073746f636b73207468616e2074686520636f6d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "20955:34:1",
                        "type": "",
                        "value": "der for more stocks than the com"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "20931:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "20931:59:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "20931:59:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21011:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21019:2:1",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21007:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21007:15:1"
                      },
                      {
                        "hexValue": "70616e7920686173",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21024:10:1",
                        "type": "",
                        "value": "pany has"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21000:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21000:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21000:35:1"
                }
              ]
            },
            "name": "store_literal_in_memory_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "20844:6:1",
                "type": ""
              }
            ],
            "src": "20746:296:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21194:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21204:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21270:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21275:2:1",
                        "type": "",
                        "value": "72"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21211:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21211:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "21204:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21376:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0",
                      "nodeType": "YulIdentifier",
                      "src": "21287:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21287:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21287:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21389:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "21400:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21405:2:1",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21396:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21396:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "21389:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "21182:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "21190:3:1",
                "type": ""
              }
            ],
            "src": "21048:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21591:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "21601:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "21613:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "21624:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "21609:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21609:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21601:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21648:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21659:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21644:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21644:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "21667:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "21673:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "21663:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21663:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21637:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21637:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21637:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "21693:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "21827:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "21701:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21701:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "21693:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "21571:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "21586:4:1",
                "type": ""
              }
            ],
            "src": "21420:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "21951:121:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "21973:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "21981:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "21969:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "21969:14:1"
                      },
                      {
                        "hexValue": "50726f706f73616c2074696d6520666f722074686973206d656574696e672068",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "21985:34:1",
                        "type": "",
                        "value": "Proposal time for this meeting h"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "21962:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "21962:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "21962:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "22041:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22049:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22037:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22037:15:1"
                      },
                      {
                        "hexValue": "617320656e646564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "22054:10:1",
                        "type": "",
                        "value": "as ended"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22030:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22030:35:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22030:35:1"
                }
              ]
            },
            "name": "store_literal_in_memory_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "21943:6:1",
                "type": ""
              }
            ],
            "src": "21845:227:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22224:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22234:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22300:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22305:2:1",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22241:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22241:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "22234:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22406:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17",
                      "nodeType": "YulIdentifier",
                      "src": "22317:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22317:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22317:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22419:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "22430:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22435:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22426:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22426:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "22419:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "22212:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "22220:3:1",
                "type": ""
              }
            ],
            "src": "22078:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22621:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "22631:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "22643:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "22654:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "22639:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22639:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22631:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22678:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "22689:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22674:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22674:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "22697:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "22703:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "22693:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22693:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22667:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22667:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22667:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "22723:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "22857:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "22731:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22731:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "22723:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "22601:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "22616:4:1",
                "type": ""
              }
            ],
            "src": "22450:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "22981:68:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23003:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23011:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "22999:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "22999:14:1"
                      },
                      {
                        "hexValue": "4d656574696e672074696d65206861736e277420636f6d65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23015:26:1",
                        "type": "",
                        "value": "Meeting time hasn't come"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "22992:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "22992:50:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "22992:50:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "22973:6:1",
                "type": ""
              }
            ],
            "src": "22875:174:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23201:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23211:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23277:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23282:2:1",
                        "type": "",
                        "value": "24"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23218:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23218:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "23211:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23383:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b",
                      "nodeType": "YulIdentifier",
                      "src": "23294:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23294:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23294:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23396:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "23407:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23412:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23403:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23403:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "23396:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "23189:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "23197:3:1",
                "type": ""
              }
            ],
            "src": "23055:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23598:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "23608:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "23620:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "23631:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "23616:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23616:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23608:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23655:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23666:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23651:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23651:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "23674:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "23680:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "23670:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23670:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23644:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23644:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23644:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "23700:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "23834:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "23708:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23708:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "23700:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "23578:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "23593:4:1",
                "type": ""
              }
            ],
            "src": "23427:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "23958:142:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "23980:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "23988:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "23976:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "23976:14:1"
                      },
                      {
                        "hexValue": "436f6d70616e7920646f65736e2774206861766520656e6f756768206d6f6e65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "23992:34:1",
                        "type": "",
                        "value": "Company doesn't have enough mone"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "23969:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "23969:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "23969:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "24048:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24056:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24044:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24044:15:1"
                      },
                      {
                        "hexValue": "7920746f207061792074686174206c61726765206469766964656e6473",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "24061:31:1",
                        "type": "",
                        "value": "y to pay that large dividends"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24037:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24037:56:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24037:56:1"
                }
              ]
            },
            "name": "store_literal_in_memory_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "23950:6:1",
                "type": ""
              }
            ],
            "src": "23852:248:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24252:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24262:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24328:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24333:2:1",
                        "type": "",
                        "value": "61"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24269:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24269:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "24262:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24434:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84",
                      "nodeType": "YulIdentifier",
                      "src": "24345:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24345:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24345:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24447:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "24458:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24463:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24454:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24454:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "24447:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "24240:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "24248:3:1",
                "type": ""
              }
            ],
            "src": "24106:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "24649:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "24659:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "24671:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "24682:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "24667:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24667:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24659:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24706:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "24717:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "24702:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24702:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "24725:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "24731:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "24721:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "24721:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "24695:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24695:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "24695:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "24751:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "24885:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "24759:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "24759:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "24751:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "24629:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "24644:4:1",
                "type": ""
              }
            ],
            "src": "24478:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25009:114:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25031:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25039:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25027:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25027:14:1"
                      },
                      {
                        "hexValue": "4469766964656e647320706179696e672074696d65206861736e277420636f6d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25043:34:1",
                        "type": "",
                        "value": "Dividends paying time hasn't com"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25020:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25020:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25020:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "25099:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25107:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25095:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25095:15:1"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "25112:3:1",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25088:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25088:28:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25088:28:1"
                }
              ]
            },
            "name": "store_literal_in_memory_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "25001:6:1",
                "type": ""
              }
            ],
            "src": "24903:220:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25275:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25285:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25351:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25356:2:1",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25292:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25292:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "25285:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25457:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401",
                      "nodeType": "YulIdentifier",
                      "src": "25368:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25368:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25368:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25470:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "25481:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25486:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25477:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25477:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "25470:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "25263:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "25271:3:1",
                "type": ""
              }
            ],
            "src": "25129:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "25672:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "25682:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "25694:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "25705:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "25690:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25690:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25682:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25729:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "25740:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "25725:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25725:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "25748:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "25754:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "25744:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "25744:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "25718:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25718:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "25718:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "25774:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "25908:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "25782:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "25782:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "25774:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "25652:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "25667:4:1",
                "type": ""
              }
            ],
            "src": "25501:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26032:131:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26054:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26062:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26050:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26050:14:1"
                      },
                      {
                        "hexValue": "4469766964656e64732063616e206f6e6c792062652070616964206174207468",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26066:34:1",
                        "type": "",
                        "value": "Dividends can only be paid at th"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26043:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26043:58:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26043:58:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "26122:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26130:2:1",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26118:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26118:15:1"
                      },
                      {
                        "hexValue": "6520656e64206f662061206d656574696e67",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "26135:20:1",
                        "type": "",
                        "value": "e end of a meeting"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26111:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26111:45:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26111:45:1"
                }
              ]
            },
            "name": "store_literal_in_memory_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "26024:6:1",
                "type": ""
              }
            ],
            "src": "25926:237:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26315:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26325:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26391:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26396:2:1",
                        "type": "",
                        "value": "50"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26332:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26332:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "26325:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26497:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70",
                      "nodeType": "YulIdentifier",
                      "src": "26408:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26408:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26408:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26510:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "26521:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26526:2:1",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26517:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26517:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "26510:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "26303:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "26311:3:1",
                "type": ""
              }
            ],
            "src": "26169:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "26712:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "26722:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "26734:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "26745:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "26730:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26730:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26722:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26769:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "26780:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "26765:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26765:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "26788:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "26794:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "26784:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "26784:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "26758:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26758:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "26758:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "26814:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "26948:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "26822:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "26822:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "26814:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "26692:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "26707:4:1",
                "type": ""
              }
            ],
            "src": "26541:419:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27072:73:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "27094:6:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27102:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27090:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27090:14:1"
                      },
                      {
                        "hexValue": "416d6f756e74206973206c6172676572207468616e2062616c616e6365",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "27106:31:1",
                        "type": "",
                        "value": "Amount is larger than balance"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27083:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27083:55:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27083:55:1"
                }
              ]
            },
            "name": "store_literal_in_memory_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "27064:6:1",
                "type": ""
              }
            ],
            "src": "26966:179:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27297:220:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27307:74:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27373:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27378:2:1",
                        "type": "",
                        "value": "29"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27314:58:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27314:67:1"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "27307:3:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27479:3:1"
                      }
                    ],
                    "functionName": {
                      "name": "store_literal_in_memory_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf",
                      "nodeType": "YulIdentifier",
                      "src": "27390:88:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27390:93:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27390:93:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27492:19:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "27503:3:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27508:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27499:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27499:12:1"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "27492:3:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf_to_t_string_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "27285:3:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "27293:3:1",
                "type": ""
              }
            ],
            "src": "27151:366:1"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "27694:248:1",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "27704:26:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "27716:9:1"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "27727:2:1",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "27712:3:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27712:18:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27704:4:1"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27751:9:1"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "27762:1:1",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "27747:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27747:17:1"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "27770:4:1"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "27776:9:1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "27766:3:1"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "27766:20:1"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "27740:6:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27740:47:1"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "27740:47:1"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "27796:139:1",
                  "value": {
                    "arguments": [
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "27930:4:1"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf_to_t_string_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "27804:124:1"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "27804:131:1"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "27796:4:1"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "27674:9:1",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "27689:4:1",
                "type": ""
              }
            ],
            "src": "27523:419:1"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint32(value) -> cleaned {\n        cleaned := and(value, 0xffffffff)\n    }\n\n    function validator_revert_t_uint32(value) {\n        if iszero(eq(value, cleanup_t_uint32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint32(value)\n    }\n\n    function abi_decode_tuple_t_uint256t_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address_payable(value) {\n        if iszero(eq(value, cleanup_t_address_payable(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_payable(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address_payable(value)\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint32(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint32_to_t_uint32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint32(value))\n    }\n\n    function abi_encode_tuple_t_uint32__to_t_uint32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_uint32_t_uint256_t_uint32_t_bool__to_t_uint32_t_uint256_t_uint32_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint32_to_t_uint32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payable(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address_payablet_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_payable(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not stockholder\")\n\n    }\n\n    function abi_encode_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You have already voted\")\n\n    }\n\n    function abi_encode_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2(memPtr) {\n\n        mstore(add(memPtr, 0), \"This dividend amount hasn't been\")\n\n        mstore(add(memPtr, 32), \" proposed\")\n\n    }\n\n    function abi_encode_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 41)\n        store_literal_in_memory_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac(memPtr) {\n\n        mstore(add(memPtr, 0), \"Voting time hasn't come\")\n\n    }\n\n    function abi_encode_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 23)\n        store_literal_in_memory_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520(memPtr) {\n\n        mstore(add(memPtr, 0), \"Voting time for this meeting has\")\n\n        mstore(add(memPtr, 32), \" ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_add_t_uint32(x, y) -> sum {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are trying to create sell or\")\n\n        mstore(add(memPtr, 32), \"der for more stocks than you hav\")\n\n        mstore(add(memPtr, 64), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 65)\n        store_literal_in_memory_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262(memPtr) {\n\n        mstore(add(memPtr, 0), \"Attempted to buy more stocks tha\")\n\n        mstore(add(memPtr, 32), \"n seller is willing to sell\")\n\n    }\n\n    function abi_encode_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 59)\n        store_literal_in_memory_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function store_literal_in_memory_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You didn't send enough money to \")\n\n        mstore(add(memPtr, 32), \"buy stocks\")\n\n    }\n\n    function abi_encode_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 42)\n        store_literal_in_memory_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint32(x, y) -> diff {\n        x := cleanup_t_uint32(x)\n        y := cleanup_t_uint32(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function store_literal_in_memory_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5(memPtr) {\n\n        mstore(add(memPtr, 0), \"Caller is not director\")\n\n    }\n\n    function abi_encode_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw funds during \")\n\n        mstore(add(memPtr, 32), \"the meeting, because it can make\")\n\n        mstore(add(memPtr, 64), \" dividends impossible to pay\")\n\n    }\n\n    function abi_encode_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 92)\n        store_literal_in_memory_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0(memPtr) {\n\n        mstore(add(memPtr, 0), \"You are trying to create sell or\")\n\n        mstore(add(memPtr, 32), \"der for more stocks than the com\")\n\n        mstore(add(memPtr, 64), \"pany has\")\n\n    }\n\n    function abi_encode_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 72)\n        store_literal_in_memory_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0(pos)\n        end := add(pos, 96)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17(memPtr) {\n\n        mstore(add(memPtr, 0), \"Proposal time for this meeting h\")\n\n        mstore(add(memPtr, 32), \"as ended\")\n\n    }\n\n    function abi_encode_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 40)\n        store_literal_in_memory_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Meeting time hasn't come\")\n\n    }\n\n    function abi_encode_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 24)\n        store_literal_in_memory_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84(memPtr) {\n\n        mstore(add(memPtr, 0), \"Company doesn't have enough mone\")\n\n        mstore(add(memPtr, 32), \"y to pay that large dividends\")\n\n    }\n\n    function abi_encode_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 61)\n        store_literal_in_memory_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dividends paying time hasn't com\")\n\n        mstore(add(memPtr, 32), \"e\")\n\n    }\n\n    function abi_encode_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70(memPtr) {\n\n        mstore(add(memPtr, 0), \"Dividends can only be paid at th\")\n\n        mstore(add(memPtr, 32), \"e end of a meeting\")\n\n    }\n\n    function abi_encode_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 50)\n        store_literal_in_memory_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf(memPtr) {\n\n        mstore(add(memPtr, 0), \"Amount is larger than balance\")\n\n    }\n\n    function abi_encode_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
      "id": 1,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1703:11606:0:-:0;;;4419:309;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4495:10;4484:8;;:21;;;;;;;;;;;;;;;;;;4530:12;4516:11;;:26;;;;;;;;;;;;;;;;;;4560:5;4553:4;:12;;;;;;;;;;;;:::i;:::-;;4618;4576;:27;4597:4;4576:27;;;;;;;;;;;;;;;:39;;;:54;;;;;;;;;;;;;;;;;;4659:15;4641;:33;;;;4685:15;4714:4;4685:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4419:309;;1703:11606;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:1:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:93;370:7;410:10;403:5;399:22;388:33;;334:93;;;:::o;433:120::-;505:23;522:5;505:23;:::i;:::-;498:5;495:34;485:62;;543:1;540;533:12;485:62;433:120;:::o;559:141::-;615:5;646:6;640:13;631:22;;662:32;688:5;662:32;:::i;:::-;559:141;;;;:::o;706:117::-;815:1;812;805:12;829:117;938:1;935;928:12;952:102;993:6;1044:2;1040:7;1035:2;1028:5;1024:14;1020:28;1010:38;;952:102;;;:::o;1060:180::-;1108:77;1105:1;1098:88;1205:4;1202:1;1195:15;1229:4;1226:1;1219:15;1246:281;1329:27;1351:4;1329:27;:::i;:::-;1321:6;1317:40;1459:6;1447:10;1444:22;1423:18;1411:10;1408:34;1405:62;1402:88;;;1470:18;;:::i;:::-;1402:88;1510:10;1506:2;1499:22;1289:238;1246:281;;:::o;1533:129::-;1567:6;1594:20;;:::i;:::-;1584:30;;1623:33;1651:4;1643:6;1623:33;:::i;:::-;1533:129;;;:::o;1668:308::-;1730:4;1820:18;1812:6;1809:30;1806:56;;;1842:18;;:::i;:::-;1806:56;1880:29;1902:6;1880:29;:::i;:::-;1872:37;;1964:4;1958;1954:15;1946:23;;1668:308;;;:::o;1982:307::-;2050:1;2060:113;2074:6;2071:1;2068:13;2060:113;;;2159:1;2154:3;2150:11;2144:18;2140:1;2135:3;2131:11;2124:39;2096:2;2093:1;2089:10;2084:15;;2060:113;;;2191:6;2188:1;2185:13;2182:101;;;2271:1;2262:6;2257:3;2253:16;2246:27;2182:101;2031:258;1982:307;;;:::o;2295:421::-;2384:5;2409:66;2425:49;2467:6;2425:49;:::i;:::-;2409:66;:::i;:::-;2400:75;;2498:6;2491:5;2484:21;2536:4;2529:5;2525:16;2574:3;2565:6;2560:3;2556:16;2553:25;2550:112;;;2581:79;;:::i;:::-;2550:112;2671:39;2703:6;2698:3;2693;2671:39;:::i;:::-;2390:326;2295:421;;;;;:::o;2736:355::-;2803:5;2852:3;2845:4;2837:6;2833:17;2829:27;2819:122;;2860:79;;:::i;:::-;2819:122;2970:6;2964:13;2995:90;3081:3;3073:6;3066:4;3058:6;3054:17;2995:90;:::i;:::-;2986:99;;2809:282;2736:355;;;;:::o;3097:678::-;3185:6;3193;3242:2;3230:9;3221:7;3217:23;3213:32;3210:119;;;3248:79;;:::i;:::-;3210:119;3368:1;3393:63;3448:7;3439:6;3428:9;3424:22;3393:63;:::i;:::-;3383:73;;3339:127;3526:2;3515:9;3511:18;3505:25;3557:18;3549:6;3546:30;3543:117;;;3579:79;;:::i;:::-;3543:117;3684:74;3750:7;3741:6;3730:9;3726:22;3684:74;:::i;:::-;3674:84;;3476:292;3097:678;;;;;:::o;3781:180::-;3829:77;3826:1;3819:88;3926:4;3923:1;3916:15;3950:4;3947:1;3940:15;3967:320;4011:6;4048:1;4042:4;4038:12;4028:22;;4095:1;4089:4;4085:12;4116:18;4106:81;;4172:4;4164:6;4160:17;4150:27;;4106:81;4234:2;4226:6;4223:14;4203:18;4200:38;4197:84;;4253:18;;:::i;:::-;4197:84;4018:269;3967:320;;;:::o;1703:11606:0:-;;;;;;;",
  "deployedSourceMap": "1703:11606:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11289:655;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6826:323;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2695:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;8033:1687;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3723:51;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3170;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;2499:55;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3982:38;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5801:257;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3406:32;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2762:23;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2333:52;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7333:357;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2608:43;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9817:1263;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3062:21;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2843:25;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5364:36;;;:::i;:::-;;2955:27;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;12148:1156;;;;;;;;;;;;;:::i;:::-;;6473:287;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;11289:655;4986:1;4946:12;:24;4959:10;4946:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:41;;;4938:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;11366:12:::1;:24;11379:10;11366:24;;;;;;;;;;;;;;;:30;;;;;;;;;;;;11365:31;11357:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;11476:1;11442:17;:31;11460:12;11442:31;;;;;;;;;;;;;;;;;;;;;:35;;;11434:89;;;;;;;;;;;;:::i;:::-;;;;;;;;;11607:15;2545:9;2376;11542:15;;:37;;;;:::i;:::-;:62;;;;:::i;:::-;:80;11534:116;;;;;;;;;;;;:::i;:::-;;;;;;;;;11748:15;2642:9;2545::::0;2376::::1;11669:15;;:37;;;;:::i;:::-;:62;;;;:::i;:::-;:75;;;;:::i;:::-;:94;;11661:145;;;;;;;;;;;;:::i;:::-;;;;;;;;;11850:4;11817:12;:24;11830:10;11817:24;;;;;;;;;;;;;;;:30;;;:37;;;;;;;;;;;;;;;;;;11900:12;:24;11913:10;11900:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;11865:17;:31;11883:12;11865:31;;;;;;;;;;;;:71;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;11289:655:::0;:::o;6826:323::-;6948:9;6908:49;;:12;:24;6921:10;6908:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:49;;;;6900:127;;;;;;;;;;;;:::i;:::-;;;;;;;;;7075:9;7038:12;:24;7051:10;7038:24;;;;;;;;;;;;;;;:34;;:46;;;;7132:9;7095:12;:24;7108:10;7095:24;;;;;;;;;;;;;;;:34;;;:46;;;;;;;;;;;;;;;;;;6826:323;;:::o;2695:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;8033:1687::-;8183:8;8138:53;;:12;:31;8151:17;8138:31;;;;;;;;;;;;;;;:41;;;;;;;;;;;;:53;;;;8130:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;8331:8;8287:52;;:12;:31;8300:17;8287:31;;;;;;;;;;;;;;;:41;;;:52;;;;:::i;:::-;8274:9;:65;;8266:120;;;;;;;;;;;;:::i;:::-;;;;;;;;;8397:24;8468:8;8424:52;;:12;:31;8437:17;8424:31;;;;;;;;;;;;;;;:41;;;:52;;;;:::i;:::-;8397:79;;8532:8;8487:12;:31;8500:17;8487:31;;;;;;;;;;;;;;;:41;;;:53;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8598:8;8551:12;:31;8564:17;8551:31;;;;;;;;;;;;;;;:43;;;:55;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;8785:1;8738:12;:31;8751:17;8738:31;;;;;;;;;;;;;;;:43;;;;;;;;;;;;:48;;;8734:571;;8803:21;8848:6;8843:203;8864:15;:22;;;;8860:1;:26;8843:203;;;8936:17;8914:39;;:15;8930:1;8914:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:39;;;8910:136;;8997:1;8978:20;;9021:5;;8910:136;8888:3;;;;;:::i;:::-;;;;8843:203;;;;9096:15;9137:1;9112:15;:22;;;;:26;;;;:::i;:::-;9096:43;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9060:15;9076:16;9060:33;;;;;;;;:::i;:::-;;;;;;;;;;:79;;;;;;;;;;;;;;;;;;9161:15;9202:1;9177:15;:22;;;;:26;;;;:::i;:::-;9161:43;;;;;;;;:::i;:::-;;;;;;;;;;9154:50;;;;;;;;;;;9219:15;:21;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9262:12;:31;9275:17;9262:31;;;;;;;;;;;;;;;;9255:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8788:517;8734:571;9359:1;9319:12;:24;9332:10;9319:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:41;;;9315:92;;9375:15;9396:10;9375:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9315:92;9458:8;9418:12;:24;9431:10;9418:24;;;;;;;;;;;;;;;:36;;;:48;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;9510:4;9481:34;;:17;:34;;;9477:97;;9530:17;:26;;:44;9557:16;9530:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9477:97;9634:4;9612:27;;:10;:27;;;9608:104;;9662:10;9654:28;;:58;9695:16;9683:9;:28;;;;:::i;:::-;9654:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9608:104;8119:1601;8033:1687;;:::o;3723:51::-;;;;;;;;;;;;;;;;;;;;;;:::o;3170:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2499:55::-;2545:9;2499:55;:::o;3982:38::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;5801:257::-;4839:8;;;;;;;;;;;4825:22;;:10;:22;;;4817:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;5888:9:::1;;;;;;;;;;;5887:10;5879:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;6005:13;:22;;:45;6028:21;6005:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;5801:257:::0;:::o;3406:32::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2762:23::-;;;;;;;;;;;;;:::o;2333:52::-;2376:9;2333:52;:::o;7333:357::-;4839:8;;;;;;;;;;;4825:22;;:10;:22;;;4817:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;7476:9:::1;7433:52;;:12;:27;7454:4;7433:27;;;;;;;;;;;;;;;:39;;;;;;;;;;;;:52;;;;7425:137;;;;;;;;;;;;:::i;:::-;;;;;;;;;7613:9;7573:12;:27;7594:4;7573:27;;;;;;;;;;;;;;;:37;;:49;;;;7673:9;7633:12;:27;7654:4;7633:27;;;;;;;;;;;;;;;:37;;;:49;;;;;;;;;;;;;;;;;;7333:357:::0;;:::o;2608:43::-;2642:9;2608:43;:::o;9817:1263::-;4986:1;4946:12;:24;4959:10;4946:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:41;;;4938:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;10152:15:::1;2545:9;2376;10087:15;;:37;;;;:::i;:::-;:62;;;;:::i;:::-;:80;10086:121;;;;;10205:1;10173:21;:28;;;;:33;10086:121;10082:272;;;2545:9;2376;10292:15;:37;;;;:::i;:::-;:62;;;;:::i;:::-;10274:15;:80;;;;10082:272;10468:15;2545:9;2376;10402:15;;:37;;;;:::i;:::-;:62;;;;:::i;:::-;:81;;10394:134;;;;;;;;;;;;:::i;:::-;;;;;;;;;10587:15;2376:9;10547:15;;:37;;;;:::i;:::-;:55;10539:92;;;;;;;;;;;;:::i;:::-;;;;;;;;;10680:21;10665:11;;;;;;;;;;;10650:26;;:12;:26;;;;:::i;:::-;:51;;10642:125;;;;;;;;;;;;:::i;:::-;;;;;;;;;10790:4;10778:9;;:16;;;;;;;;;;;;;;;;;;11020:1;10986:17;:31;11004:12;10986:31;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;11032:21;11059:12;11032:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9817:1263:::0;:::o;3062:21::-;;;;;;;;;;;;;:::o;2843:25::-;;;;;;;;;;;;;:::o;5364:36::-;:::o;2955:27::-;;;;:::o;12148:1156::-;4986:1;4946:12;:24;4959:10;4946:24;;;;;;;;;;;;;;;:36;;;;;;;;;;;;:41;;;4938:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;12290:15:::1;2642:9;2545::::0;2376::::1;12212:15;;:37;;;;:::i;:::-;:62;;;;:::i;:::-;:75;;;;:::i;:::-;:93;12204:139;;;;;;;;;;;;:::i;:::-;;;;;;;;;12362:9;;;;;;;;;;;12354:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;12437:16;12468:28:::0;12516:6:::1;12511:364;12532:21;:28;;;;12528:1;:32;12511:364;;;12632:9;12586:55;;:17;:43;12604:21;12626:1;12604:24;;;;;;;;:::i;:::-;;;;;;;;;;12586:43;;;;;;;;;;;;;;;;;;;;;:55;;;12582:217;;;12674:17;:43;12692:21;12714:1;12692:24;;;;;;;;:::i;:::-;;;;;;;;;;12674:43;;;;;;;;;;;;;;;;;;;;;12662:55;;12759:21;12781:1;12759:24;;;;;;;;:::i;:::-;;;;;;;;;;12736:47;;12582:217;12820:17;:43;12838:21;12860:1;12838:24;;;;;;;;:::i;:::-;;;;;;;;;;12820:43;;;;;;;;;;;;12813:50;;;;;;;;;;;12562:3;;;;;:::i;:::-;;;;12511:364;;;;12892:21;;12885:28;;;;:::i;:::-;12929:6;12924:301;12945:15;:22;;;;12941:1;:26;12924:301;;;13030:5;12989:12;:32;13002:15;13018:1;13002:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;12989:32;;;;;;;;;;;;;;;:38;;;:46;;;;;;;;;;;;;;;;;;13084:4;13054:35;;:15;13070:1;13054:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;:35;;;13050:163;;13116:15;13132:1;13116:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13108:36;;:105;13168:12;:32;13181:15;13197:1;13181:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13168:32;;;;;;;;;;;;;;;:44;;;;;;;;;;;;13145:67;;:20;:67;;;;:::i;:::-;13108:105;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;13050:163;12969:3;;;;;:::i;:::-;;;;12924:301;;;;13253:15;13235;:33;;;;13291:5;13279:9;;:17;;;;;;;;;;;;;;;;;;12193:1111;;12148:1156::o:0;6473:287::-;4839:8;;;;;;;;;;;4825:22;;:10;:22;;;4817:57;;;;;;;;;;;;:::i;:::-;;;;;;;;;6577:6:::1;5135;5110:21;:31;;5102:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;6605:9:::2;;;;;;;;;;;6604:10;6596:115;;;;;;;;;;;;:::i;:::-;;;;;;;;;6722:13;:22;;:30;6745:6;6722:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;4885:1:::1;6473:287:::0;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:93::-;1061:7;1101:10;1094:5;1090:22;1079:33;;1025:93;;;:::o;1124:120::-;1196:23;1213:5;1196:23;:::i;:::-;1189:5;1186:34;1176:62;;1234:1;1231;1224:12;1176:62;1124:120;:::o;1250:137::-;1295:5;1333:6;1320:20;1311:29;;1349:32;1375:5;1349:32;:::i;:::-;1250:137;;;;:::o;1393:472::-;1460:6;1468;1517:2;1505:9;1496:7;1492:23;1488:32;1485:119;;;1523:79;;:::i;:::-;1485:119;1643:1;1668:53;1713:7;1704:6;1693:9;1689:22;1668:53;:::i;:::-;1658:63;;1614:117;1770:2;1796:52;1840:7;1831:6;1820:9;1816:22;1796:52;:::i;:::-;1786:62;;1741:117;1393:472;;;;;:::o;1871:99::-;1923:6;1957:5;1951:12;1941:22;;1871:99;;;:::o;1976:169::-;2060:11;2094:6;2089:3;2082:19;2134:4;2129:3;2125:14;2110:29;;1976:169;;;;:::o;2151:307::-;2219:1;2229:113;2243:6;2240:1;2237:13;2229:113;;;2328:1;2323:3;2319:11;2313:18;2309:1;2304:3;2300:11;2293:39;2265:2;2262:1;2258:10;2253:15;;2229:113;;;2360:6;2357:1;2354:13;2351:101;;;2440:1;2431:6;2426:3;2422:16;2415:27;2351:101;2200:258;2151:307;;;:::o;2464:102::-;2505:6;2556:2;2552:7;2547:2;2540:5;2536:14;2532:28;2522:38;;2464:102;;;:::o;2572:364::-;2660:3;2688:39;2721:5;2688:39;:::i;:::-;2743:71;2807:6;2802:3;2743:71;:::i;:::-;2736:78;;2823:52;2868:6;2863:3;2856:4;2849:5;2845:16;2823:52;:::i;:::-;2900:29;2922:6;2900:29;:::i;:::-;2895:3;2891:39;2884:46;;2664:272;2572:364;;;;:::o;2942:313::-;3055:4;3093:2;3082:9;3078:18;3070:26;;3142:9;3136:4;3132:20;3128:1;3117:9;3113:17;3106:47;3170:78;3243:4;3234:6;3170:78;:::i;:::-;3162:86;;2942:313;;;;:::o;3261:126::-;3298:7;3338:42;3331:5;3327:54;3316:65;;3261:126;;;:::o;3393:104::-;3438:7;3467:24;3485:5;3467:24;:::i;:::-;3456:35;;3393:104;;;:::o;3503:138::-;3584:32;3610:5;3584:32;:::i;:::-;3577:5;3574:43;3564:71;;3631:1;3628;3621:12;3564:71;3503:138;:::o;3647:155::-;3701:5;3739:6;3726:20;3717:29;;3755:41;3790:5;3755:41;:::i;:::-;3647:155;;;;:::o;3808:488::-;3883:6;3891;3940:2;3928:9;3919:7;3915:23;3911:32;3908:119;;;3946:79;;:::i;:::-;3908:119;4066:1;4091:61;4144:7;4135:6;4124:9;4120:22;4091:61;:::i;:::-;4081:71;;4037:125;4201:2;4227:52;4271:7;4262:6;4251:9;4247:22;4227:52;:::i;:::-;4217:62;;4172:117;3808:488;;;;;:::o;4302:115::-;4387:23;4404:5;4387:23;:::i;:::-;4382:3;4375:36;4302:115;;:::o;4423:218::-;4514:4;4552:2;4541:9;4537:18;4529:26;;4565:69;4631:1;4620:9;4616:17;4607:6;4565:69;:::i;:::-;4423:218;;;;:::o;4647:96::-;4684:7;4713:24;4731:5;4713:24;:::i;:::-;4702:35;;4647:96;;;:::o;4749:122::-;4822:24;4840:5;4822:24;:::i;:::-;4815:5;4812:35;4802:63;;4861:1;4858;4851:12;4802:63;4749:122;:::o;4877:139::-;4923:5;4961:6;4948:20;4939:29;;4977:33;5004:5;4977:33;:::i;:::-;4877:139;;;;:::o;5022:329::-;5081:6;5130:2;5118:9;5109:7;5105:23;5101:32;5098:119;;;5136:79;;:::i;:::-;5098:119;5256:1;5281:53;5326:7;5317:6;5306:9;5302:22;5281:53;:::i;:::-;5271:63;;5227:117;5022:329;;;;:::o;5357:118::-;5444:24;5462:5;5444:24;:::i;:::-;5439:3;5432:37;5357:118;;:::o;5481:90::-;5515:7;5558:5;5551:13;5544:21;5533:32;;5481:90;;;:::o;5577:109::-;5658:21;5673:5;5658:21;:::i;:::-;5653:3;5646:34;5577:109;;:::o;5692:533::-;5859:4;5897:3;5886:9;5882:19;5874:27;;5911:69;5977:1;5966:9;5962:17;5953:6;5911:69;:::i;:::-;5990:72;6058:2;6047:9;6043:18;6034:6;5990:72;:::i;:::-;6072:70;6138:2;6127:9;6123:18;6114:6;6072:70;:::i;:::-;6152:66;6214:2;6203:9;6199:18;6190:6;6152:66;:::i;:::-;5692:533;;;;;;;:::o;6231:222::-;6324:4;6362:2;6351:9;6347:18;6339:26;;6375:71;6443:1;6432:9;6428:17;6419:6;6375:71;:::i;:::-;6231:222;;;;:::o;6459:345::-;6526:6;6575:2;6563:9;6554:7;6550:23;6546:32;6543:119;;;6581:79;;:::i;:::-;6543:119;6701:1;6726:61;6779:7;6770:6;6759:9;6755:22;6726:61;:::i;:::-;6716:71;;6672:125;6459:345;;;;:::o;6810:118::-;6897:24;6915:5;6897:24;:::i;:::-;6892:3;6885:37;6810:118;;:::o;6934:222::-;7027:4;7065:2;7054:9;7050:18;7042:26;;7078:71;7146:1;7135:9;7131:17;7122:6;7078:71;:::i;:::-;6934:222;;;;:::o;7162:210::-;7249:4;7287:2;7276:9;7272:18;7264:26;;7300:65;7362:1;7351:9;7347:17;7338:6;7300:65;:::i;:::-;7162:210;;;;:::o;7378:490::-;7454:6;7462;7511:2;7499:9;7490:7;7486:23;7482:32;7479:119;;;7517:79;;:::i;:::-;7479:119;7637:1;7662:61;7715:7;7706:6;7695:9;7691:22;7662:61;:::i;:::-;7652:71;;7608:125;7772:2;7798:53;7843:7;7834:6;7823:9;7819:22;7798:53;:::i;:::-;7788:63;;7743:118;7378:490;;;;;:::o;7874:175::-;8014:27;8010:1;8002:6;7998:14;7991:51;7874:175;:::o;8055:366::-;8197:3;8218:67;8282:2;8277:3;8218:67;:::i;:::-;8211:74;;8294:93;8383:3;8294:93;:::i;:::-;8412:2;8407:3;8403:12;8396:19;;8055:366;;;:::o;8427:419::-;8593:4;8631:2;8620:9;8616:18;8608:26;;8680:9;8674:4;8670:20;8666:1;8655:9;8651:17;8644:47;8708:131;8834:4;8708:131;:::i;:::-;8700:139;;8427:419;;;:::o;8852:172::-;8992:24;8988:1;8980:6;8976:14;8969:48;8852:172;:::o;9030:366::-;9172:3;9193:67;9257:2;9252:3;9193:67;:::i;:::-;9186:74;;9269:93;9358:3;9269:93;:::i;:::-;9387:2;9382:3;9378:12;9371:19;;9030:366;;;:::o;9402:419::-;9568:4;9606:2;9595:9;9591:18;9583:26;;9655:9;9649:4;9645:20;9641:1;9630:9;9626:17;9619:47;9683:131;9809:4;9683:131;:::i;:::-;9675:139;;9402:419;;;:::o;9827:228::-;9967:34;9963:1;9955:6;9951:14;9944:58;10036:11;10031:2;10023:6;10019:15;10012:36;9827:228;:::o;10061:366::-;10203:3;10224:67;10288:2;10283:3;10224:67;:::i;:::-;10217:74;;10300:93;10389:3;10300:93;:::i;:::-;10418:2;10413:3;10409:12;10402:19;;10061:366;;;:::o;10433:419::-;10599:4;10637:2;10626:9;10622:18;10614:26;;10686:9;10680:4;10676:20;10672:1;10661:9;10657:17;10650:47;10714:131;10840:4;10714:131;:::i;:::-;10706:139;;10433:419;;;:::o;10858:180::-;10906:77;10903:1;10896:88;11003:4;11000:1;10993:15;11027:4;11024:1;11017:15;11044:305;11084:3;11103:20;11121:1;11103:20;:::i;:::-;11098:25;;11137:20;11155:1;11137:20;:::i;:::-;11132:25;;11291:1;11223:66;11219:74;11216:1;11213:81;11210:107;;;11297:18;;:::i;:::-;11210:107;11341:1;11338;11334:9;11327:16;;11044:305;;;;:::o;11355:173::-;11495:25;11491:1;11483:6;11479:14;11472:49;11355:173;:::o;11534:366::-;11676:3;11697:67;11761:2;11756:3;11697:67;:::i;:::-;11690:74;;11773:93;11862:3;11773:93;:::i;:::-;11891:2;11886:3;11882:12;11875:19;;11534:366;;;:::o;11906:419::-;12072:4;12110:2;12099:9;12095:18;12087:26;;12159:9;12153:4;12149:20;12145:1;12134:9;12130:17;12123:47;12187:131;12313:4;12187:131;:::i;:::-;12179:139;;11906:419;;;:::o;12331:225::-;12471:34;12467:1;12459:6;12455:14;12448:58;12540:8;12535:2;12527:6;12523:15;12516:33;12331:225;:::o;12562:366::-;12704:3;12725:67;12789:2;12784:3;12725:67;:::i;:::-;12718:74;;12801:93;12890:3;12801:93;:::i;:::-;12919:2;12914:3;12910:12;12903:19;;12562:366;;;:::o;12934:419::-;13100:4;13138:2;13127:9;13123:18;13115:26;;13187:9;13181:4;13177:20;13173:1;13162:9;13158:17;13151:47;13215:131;13341:4;13215:131;:::i;:::-;13207:139;;12934:419;;;:::o;13359:246::-;13398:3;13417:19;13434:1;13417:19;:::i;:::-;13412:24;;13450:19;13467:1;13450:19;:::i;:::-;13445:24;;13547:1;13535:10;13531:18;13528:1;13525:25;13522:51;;;13553:18;;:::i;:::-;13522:51;13597:1;13594;13590:9;13583:16;;13359:246;;;;:::o;13611:289::-;13751:34;13747:1;13739:6;13735:14;13728:58;13820:34;13815:2;13807:6;13803:15;13796:59;13889:3;13884:2;13876:6;13872:15;13865:28;13611:289;:::o;13906:366::-;14048:3;14069:67;14133:2;14128:3;14069:67;:::i;:::-;14062:74;;14145:93;14234:3;14145:93;:::i;:::-;14263:2;14258:3;14254:12;14247:19;;13906:366;;;:::o;14278:419::-;14444:4;14482:2;14471:9;14467:18;14459:26;;14531:9;14525:4;14521:20;14517:1;14506:9;14502:17;14495:47;14559:131;14685:4;14559:131;:::i;:::-;14551:139;;14278:419;;;:::o;14703:180::-;14751:77;14748:1;14741:88;14848:4;14845:1;14838:15;14872:4;14869:1;14862:15;14889:320;14933:6;14970:1;14964:4;14960:12;14950:22;;15017:1;15011:4;15007:12;15038:18;15028:81;;15094:4;15086:6;15082:17;15072:27;;15028:81;15156:2;15148:6;15145:14;15125:18;15122:38;15119:84;;15175:18;;:::i;:::-;15119:84;14940:269;14889:320;;;:::o;15215:246::-;15355:34;15351:1;15343:6;15339:14;15332:58;15424:29;15419:2;15411:6;15407:15;15400:54;15215:246;:::o;15467:366::-;15609:3;15630:67;15694:2;15689:3;15630:67;:::i;:::-;15623:74;;15706:93;15795:3;15706:93;:::i;:::-;15824:2;15819:3;15815:12;15808:19;;15467:366;;;:::o;15839:419::-;16005:4;16043:2;16032:9;16028:18;16020:26;;16092:9;16086:4;16082:20;16078:1;16067:9;16063:17;16056:47;16120:131;16246:4;16120:131;:::i;:::-;16112:139;;15839:419;;;:::o;16264:348::-;16304:7;16327:20;16345:1;16327:20;:::i;:::-;16322:25;;16361:20;16379:1;16361:20;:::i;:::-;16356:25;;16549:1;16481:66;16477:74;16474:1;16471:81;16466:1;16459:9;16452:17;16448:105;16445:131;;;16556:18;;:::i;:::-;16445:131;16604:1;16601;16597:9;16586:20;;16264:348;;;;:::o;16618:229::-;16758:34;16754:1;16746:6;16742:14;16735:58;16827:12;16822:2;16814:6;16810:15;16803:37;16618:229;:::o;16853:366::-;16995:3;17016:67;17080:2;17075:3;17016:67;:::i;:::-;17009:74;;17092:93;17181:3;17092:93;:::i;:::-;17210:2;17205:3;17201:12;17194:19;;16853:366;;;:::o;17225:419::-;17391:4;17429:2;17418:9;17414:18;17406:26;;17478:9;17472:4;17468:20;17464:1;17453:9;17449:17;17442:47;17506:131;17632:4;17506:131;:::i;:::-;17498:139;;17225:419;;;:::o;17650:188::-;17689:4;17709:19;17726:1;17709:19;:::i;:::-;17704:24;;17742:19;17759:1;17742:19;:::i;:::-;17737:24;;17780:1;17777;17774:8;17771:34;;;17785:18;;:::i;:::-;17771:34;17830:1;17827;17823:9;17815:17;;17650:188;;;;:::o;17844:180::-;17892:77;17889:1;17882:88;17989:4;17986:1;17979:15;18013:4;18010:1;18003:15;18030:233;18069:3;18092:24;18110:5;18092:24;:::i;:::-;18083:33;;18138:66;18131:5;18128:77;18125:103;;18208:18;;:::i;:::-;18125:103;18255:1;18248:5;18244:13;18237:20;;18030:233;;;:::o;18269:191::-;18309:4;18329:20;18347:1;18329:20;:::i;:::-;18324:25;;18363:20;18381:1;18363:20;:::i;:::-;18358:25;;18402:1;18399;18396:8;18393:34;;;18407:18;;:::i;:::-;18393:34;18452:1;18449;18445:9;18437:17;;18269:191;;;;:::o;18466:180::-;18514:77;18511:1;18504:88;18611:4;18608:1;18601:15;18635:4;18632:1;18625:15;18652:172;18792:24;18788:1;18780:6;18776:14;18769:48;18652:172;:::o;18830:366::-;18972:3;18993:67;19057:2;19052:3;18993:67;:::i;:::-;18986:74;;19069:93;19158:3;19069:93;:::i;:::-;19187:2;19182:3;19178:12;19171:19;;18830:366;;;:::o;19202:419::-;19368:4;19406:2;19395:9;19391:18;19383:26;;19455:9;19449:4;19445:20;19441:1;19430:9;19426:17;19419:47;19483:131;19609:4;19483:131;:::i;:::-;19475:139;;19202:419;;;:::o;19627:316::-;19767:34;19763:1;19755:6;19751:14;19744:58;19836:34;19831:2;19823:6;19819:15;19812:59;19905:30;19900:2;19892:6;19888:15;19881:55;19627:316;:::o;19949:366::-;20091:3;20112:67;20176:2;20171:3;20112:67;:::i;:::-;20105:74;;20188:93;20277:3;20188:93;:::i;:::-;20306:2;20301:3;20297:12;20290:19;;19949:366;;;:::o;20321:419::-;20487:4;20525:2;20514:9;20510:18;20502:26;;20574:9;20568:4;20564:20;20560:1;20549:9;20545:17;20538:47;20602:131;20728:4;20602:131;:::i;:::-;20594:139;;20321:419;;;:::o;20746:296::-;20886:34;20882:1;20874:6;20870:14;20863:58;20955:34;20950:2;20942:6;20938:15;20931:59;21024:10;21019:2;21011:6;21007:15;21000:35;20746:296;:::o;21048:366::-;21190:3;21211:67;21275:2;21270:3;21211:67;:::i;:::-;21204:74;;21287:93;21376:3;21287:93;:::i;:::-;21405:2;21400:3;21396:12;21389:19;;21048:366;;;:::o;21420:419::-;21586:4;21624:2;21613:9;21609:18;21601:26;;21673:9;21667:4;21663:20;21659:1;21648:9;21644:17;21637:47;21701:131;21827:4;21701:131;:::i;:::-;21693:139;;21420:419;;;:::o;21845:227::-;21985:34;21981:1;21973:6;21969:14;21962:58;22054:10;22049:2;22041:6;22037:15;22030:35;21845:227;:::o;22078:366::-;22220:3;22241:67;22305:2;22300:3;22241:67;:::i;:::-;22234:74;;22317:93;22406:3;22317:93;:::i;:::-;22435:2;22430:3;22426:12;22419:19;;22078:366;;;:::o;22450:419::-;22616:4;22654:2;22643:9;22639:18;22631:26;;22703:9;22697:4;22693:20;22689:1;22678:9;22674:17;22667:47;22731:131;22857:4;22731:131;:::i;:::-;22723:139;;22450:419;;;:::o;22875:174::-;23015:26;23011:1;23003:6;22999:14;22992:50;22875:174;:::o;23055:366::-;23197:3;23218:67;23282:2;23277:3;23218:67;:::i;:::-;23211:74;;23294:93;23383:3;23294:93;:::i;:::-;23412:2;23407:3;23403:12;23396:19;;23055:366;;;:::o;23427:419::-;23593:4;23631:2;23620:9;23616:18;23608:26;;23680:9;23674:4;23670:20;23666:1;23655:9;23651:17;23644:47;23708:131;23834:4;23708:131;:::i;:::-;23700:139;;23427:419;;;:::o;23852:248::-;23992:34;23988:1;23980:6;23976:14;23969:58;24061:31;24056:2;24048:6;24044:15;24037:56;23852:248;:::o;24106:366::-;24248:3;24269:67;24333:2;24328:3;24269:67;:::i;:::-;24262:74;;24345:93;24434:3;24345:93;:::i;:::-;24463:2;24458:3;24454:12;24447:19;;24106:366;;;:::o;24478:419::-;24644:4;24682:2;24671:9;24667:18;24659:26;;24731:9;24725:4;24721:20;24717:1;24706:9;24702:17;24695:47;24759:131;24885:4;24759:131;:::i;:::-;24751:139;;24478:419;;;:::o;24903:220::-;25043:34;25039:1;25031:6;25027:14;25020:58;25112:3;25107:2;25099:6;25095:15;25088:28;24903:220;:::o;25129:366::-;25271:3;25292:67;25356:2;25351:3;25292:67;:::i;:::-;25285:74;;25368:93;25457:3;25368:93;:::i;:::-;25486:2;25481:3;25477:12;25470:19;;25129:366;;;:::o;25501:419::-;25667:4;25705:2;25694:9;25690:18;25682:26;;25754:9;25748:4;25744:20;25740:1;25729:9;25725:17;25718:47;25782:131;25908:4;25782:131;:::i;:::-;25774:139;;25501:419;;;:::o;25926:237::-;26066:34;26062:1;26054:6;26050:14;26043:58;26135:20;26130:2;26122:6;26118:15;26111:45;25926:237;:::o;26169:366::-;26311:3;26332:67;26396:2;26391:3;26332:67;:::i;:::-;26325:74;;26408:93;26497:3;26408:93;:::i;:::-;26526:2;26521:3;26517:12;26510:19;;26169:366;;;:::o;26541:419::-;26707:4;26745:2;26734:9;26730:18;26722:26;;26794:9;26788:4;26784:20;26780:1;26769:9;26765:17;26758:47;26822:131;26948:4;26822:131;:::i;:::-;26814:139;;26541:419;;;:::o;26966:179::-;27106:31;27102:1;27094:6;27090:14;27083:55;26966:179;:::o;27151:366::-;27293:3;27314:67;27378:2;27373:3;27314:67;:::i;:::-;27307:74;;27390:93;27479:3;27390:93;:::i;:::-;27508:2;27503:3;27499:12;27492:19;;27151:366;;;:::o;27523:419::-;27689:4;27727:2;27716:9;27712:18;27704:26;;27776:9;27770:4;27766:20;27762:1;27751:9;27747:17;27740:47;27804:131;27930:4;27804:131;:::i;:::-;27796:139;;27523:419;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity >=0.7.0 <0.9.0;\r\n\r\n/*\r\nТорговля акциями происходит так.\r\nАкционер, который хочет продать акции, выставляет ордер на продажу с помощью функции sellOrder().\r\nДля акции компании ордер создает директор с помощью функции companySellOrder().\r\nВ ордере указывается цена и количество акций.\r\nКаждый акционер может выставить только 1 ордер на продажу. Это – ограничение реализации, а не бизнес-логики.\r\nАкционер, который хочет купить акции, находит акционера, который выставил ордер на продажу, и покупает акции по его ордеру.\r\n*/\r\n\r\n\r\n/*\r\nСобрание акционеров работает так.\r\nЕсть следующие фазы работы компании, они сменяют друг друга по времени:\r\n1. Время между собраниями акционеров timeBetweenMeetings\r\n2. Время на внесение предложений по размеру дивидендов minTimeToMakeProposals\r\n3. Время на голосование timeToVote\r\n4. Выплата дивидендов. Ее может запустить любой акционер после завершения фазы голосования. Выплата дивидендов перезапускает \"цикл работы компании\"\r\n*/\r\n\r\n\r\ncontract Stocks {\r\n\r\n    struct Stockholder {\r\n        // Количество акций у акционера\r\n        uint32 stocksCount;\r\n        // Цена, по которой акционер готов продовать свои акции\r\n        uint256 sellPrice;\r\n        // Количество акций, которое акционер готов продать\r\n        uint32 sellCount;\r\n        // Проголосовал ли акционер на идущем собрании акционеров\r\n        bool voted;\r\n    }\r\n\r\n    // Время между собраниями акционеров\r\n    uint public constant timeBetweenMeetings = 3 minutes;\r\n    // Время на внесение предложений по размерам дивидендов\r\n    uint public constant minTimeToMakeProposals = 2 minutes;\r\n    // Время на голосование\r\n    uint public constant timeToVote = 2 minutes;\r\n\r\n    //Название акции\r\n    string public name;\r\n    // Директор компании\r\n    address public director;\r\n    // Общее количество акций\r\n    uint32 public stocksCount;\r\n    // Время предыдущего собрания акционеров\r\n    uint public lastMeetingTime;\r\n    // Идет ли сейчас собрание акционеров\r\n    bool public isMeeting;\r\n\r\n    // Адрес акционера => данные об акционере\r\n    mapping(address => Stockholder) public stockholders;\r\n    // Список акционеров компании. Нужен, так как не существует способа получить список ключей mapping\r\n    address[] public stockholderList;\r\n\r\n    // Предлагаемый размер дивиденда (на 1 акцию) => количество голосов за это предложение + 1 (так как единицей помечаются предложенные размеры дивиденда)\r\n    mapping(uint256 => uint32) public dividendProposals;\r\n    // Список предложенных размеров дивиденда. Нужен, так как не существует способа получить список ключей mapping\r\n    uint256[] public proposedDividendSizes;\r\n\r\n    // Тот, кто создал смарт-контракт, становится директором компании\r\n    // _stocksCount – количество акций, которое будет выпущено\r\n    // После конструктора нужно использовать функцию companySellOrder(), чтобы начать продажу акций\r\n    constructor(uint32 _stocksCount, string memory _name) {\r\n        director = msg.sender;\r\n        stocksCount = _stocksCount;\r\n        name = _name;\r\n        stockholders[address(this)].stocksCount = _stocksCount;\r\n        lastMeetingTime = block.timestamp;\r\n        stockholderList.push(address(this));\r\n    }\r\n\r\n    // modifier to check if caller is director\r\n    modifier isDirector() {\r\n        require(msg.sender == director, \"Caller is not director\");\r\n        _;\r\n    }\r\n\r\n    modifier isStockholder() {\r\n        require(stockholders[msg.sender].stocksCount != 0, \"Caller is not stockholder\");\r\n        _;\r\n    }\r\n\r\n    modifier notLargerThanBalance(uint256 amount) {\r\n        require(address(this).balance >= amount, \"Amount is larger than balance\");\r\n        _;\r\n    }\r\n\r\n\r\n    // Отправить деньги на счет компании\r\n    // Кто угодно может отправить деньги компании\r\n    function deposit() public payable {}\r\n\r\n    // Перевести все деньги компании на счет targetAddress. Только директор может выводить деньги компании\r\n    // Во время собрания акционеров нельзя выводить деньги, так как это может сделать невозможной выплату дивидендов\r\n    function withdraw(address payable targetAddress) public isDirector {\r\n        require(!isMeeting, \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\");\r\n        targetAddress.transfer(address(this).balance);\r\n    }\r\n\r\n    // Перевести сумму amount на счет targetAddress со счета компании. Только директор может выводить деньги компании\r\n    // Во время собрания акционеров нельзя выводить деньги, так как это может сделать невозможной выплату дивидендов\r\n    function withdraw(address payable targetAddress, uint256 amount) public isDirector notLargerThanBalance(amount) {\r\n        require(!isMeeting, \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\");\r\n        targetAddress.transfer(amount);\r\n    }\r\n\r\n    // Выставить ордер на продажу\r\n    function sellOrder(uint256 sellPrice, uint32 sellCount) public {\r\n        require(stockholders[msg.sender].stocksCount >= sellCount, \"You are trying to create sell order for more stocks than you have\");\r\n        stockholders[msg.sender].sellPrice = sellPrice;\r\n        stockholders[msg.sender].sellCount = sellCount;\r\n    }\r\n\r\n    // Выставить ордер на продажу акций, принадлежащих компании. Только директор может делать это\r\n    function companySellOrder(uint256 sellPrice, uint32 sellCount) public isDirector {\r\n        require(stockholders[address(this)].stocksCount >= sellCount, \"You are trying to create sell order for more stocks than the company has\");\r\n        stockholders[address(this)].sellPrice = sellPrice;\r\n        stockholders[address(this)].sellCount = sellCount;\r\n    }\r\n\r\n    // Купить акции по существующему ордеру на продажу\r\n    // На эту функцию нужно отправить сумму денег, достаточную для покупки акций. При необходимости покупателю выплачивается сдача\r\n    function buyStocks(address payable sellerStockholder, uint32 buyCount) public payable {\r\n        require(stockholders[sellerStockholder].sellCount >= buyCount, \"Attempted to buy more stocks than seller is willing to sell\");\r\n        require(msg.value >= stockholders[sellerStockholder].sellPrice * buyCount, \"You didn't send enough money to buy stocks\");\r\n        uint256 transactionValue = stockholders[sellerStockholder].sellPrice * buyCount;\r\n        stockholders[sellerStockholder].sellCount -= buyCount;\r\n        stockholders[sellerStockholder].stocksCount -= buyCount;\r\n        // Если акционер продал все свои акции, удаляем данные о нем\r\n        if (stockholders[sellerStockholder].stocksCount == 0) {\r\n            uint stockholderIndex = 0;\r\n            for (uint i = 0; i < stockholderList.length; i++)\r\n                if (stockholderList[i] == sellerStockholder) {\r\n                    stockholderIndex = i;\r\n                    break;\r\n                }\r\n            stockholderList[stockholderIndex] = stockholderList[stockholderList.length - 1];\r\n            delete stockholderList[stockholderList.length - 1];\r\n            stockholderList.pop();\r\n            delete stockholders[sellerStockholder];\r\n        }\r\n        if (stockholders[msg.sender].stocksCount == 0)\r\n            stockholderList.push(msg.sender);\r\n        stockholders[msg.sender].stocksCount += buyCount;\r\n        if (sellerStockholder != address(this))\r\n            sellerStockholder.transfer(transactionValue);\r\n        // Сдача\r\n        if (msg.sender != address(this))\r\n            payable(msg.sender).transfer(msg.value - transactionValue);\r\n    }\r\n\r\n    // Выдвинуть предложение о размере дивидендов\r\n    function makeDividendsProposal(uint256 dividendSize) public isStockholder {\r\n        // Если время выдвижения предложений прошло, а предложений нет, начинаем встречу прямо сейчас\r\n        if ((lastMeetingTime + timeBetweenMeetings + minTimeToMakeProposals < block.timestamp) && (proposedDividendSizes.length == 0))\r\n        //{\r\n        //    require(false, \"Test\");\r\n            lastMeetingTime = block.timestamp - timeBetweenMeetings - minTimeToMakeProposals;\r\n        //}\r\n        //else\r\n        require(lastMeetingTime + timeBetweenMeetings + minTimeToMakeProposals >= block.timestamp, \"Proposal time for this meeting has ended\");\r\n        require(lastMeetingTime + timeBetweenMeetings < block.timestamp, \"Meeting time hasn't come\");\r\n        require(dividendSize * stocksCount <= address(this).balance, \"Company doesn't have enough money to pay that large dividends\");\r\n        isMeeting = true;\r\n        // Пометка того, что этот размер дивидендов был предложен. На результаты голосования не влияет\r\n        dividendProposals[dividendSize] = 1;\r\n        proposedDividendSizes.push(dividendSize);\r\n    }\r\n\r\n    // Проголосовать за размер дивидендов\r\n    // Этот размер дивидендов должен быть предложен в фазе предложений\r\n    function vote(uint256 dividendSize) public isStockholder {\r\n        require(!stockholders[msg.sender].voted, \"You have already voted\");\r\n        require(dividendProposals[dividendSize] > 0, \"This dividend amount hasn't been proposed\");\r\n        require(lastMeetingTime + timeBetweenMeetings + minTimeToMakeProposals < block.timestamp, \"Voting time hasn't come\");\r\n        require(lastMeetingTime + timeBetweenMeetings + minTimeToMakeProposals + timeToVote >= block.timestamp, \"Voting time for this meeting has ended\");\r\n        stockholders[msg.sender].voted = true;\r\n        dividendProposals[dividendSize] += stockholders[msg.sender].stocksCount;\r\n    }\r\n\r\n    // Выплатить дивиденды в размере, выигравшем голосование\r\n    // Также проводит очистку данных голосования\r\n    function payDividends() public isStockholder {\r\n        require(lastMeetingTime + timeBetweenMeetings + minTimeToMakeProposals + timeToVote < block.timestamp, \"Dividends paying time hasn't come\");\r\n        require(isMeeting, \"Dividends can only be paid at the end of a meeting\");\r\n        uint32 max_votes = 0;\r\n        uint256 most_voted_dividends = 0;\r\n        for (uint i = 0; i < proposedDividendSizes.length; i++) {\r\n            if (dividendProposals[proposedDividendSizes[i]] > max_votes) {\r\n                max_votes = dividendProposals[proposedDividendSizes[i]];\r\n                most_voted_dividends = proposedDividendSizes[i];\r\n            }\r\n            delete dividendProposals[proposedDividendSizes[i]];\r\n        }\r\n        delete proposedDividendSizes;\r\n        for (uint i = 0; i < stockholderList.length; i++) {\r\n            stockholders[stockholderList[i]].voted = false;\r\n            if (stockholderList[i] != address(this))\r\n                payable(stockholderList[i]).transfer(most_voted_dividends * stockholders[stockholderList[i]].stocksCount);\r\n        }\r\n        lastMeetingTime = block.timestamp;\r\n        isMeeting = false;\r\n    }\r\n\r\n}\r\n",
  "sourcePath": "/Users/vitdub/WebstormProjects/auction-2/src/truffle/contracts/Stocks.sol",
  "ast": {
    "absolutePath": "project:/contracts/Stocks.sol",
    "exportedSymbols": {
      "Stocks": [
        731
      ]
    },
    "id": 732,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:31:0"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stocks",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 731,
        "linearizedBaseContracts": [
          731
        ],
        "name": "Stocks",
        "nameLocation": "1712:6:0",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "Stocks.Stockholder",
            "id": 10,
            "members": [
              {
                "constant": false,
                "id": 3,
                "mutability": "mutable",
                "name": "stocksCount",
                "nameLocation": "1831:11:0",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "1824:18:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 2,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1824:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5,
                "mutability": "mutable",
                "name": "sellPrice",
                "nameLocation": "1970:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "1962:17:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 4,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1962:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 7,
                "mutability": "mutable",
                "name": "sellCount",
                "nameLocation": "2100:9:0",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "2093:16:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 6,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "2093:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 9,
                "mutability": "mutable",
                "name": "voted",
                "nameLocation": "2240:5:0",
                "nodeType": "VariableDeclaration",
                "scope": 10,
                "src": "2235:10:0",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 8,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2235:4:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stockholder",
            "nameLocation": "1735:11:0",
            "nodeType": "StructDefinition",
            "scope": 731,
            "src": "1728:525:0",
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "92ac771a",
            "id": 13,
            "mutability": "constant",
            "name": "timeBetweenMeetings",
            "nameLocation": "2354:19:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2333:52:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 11,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2333:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "33",
              "id": 12,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2376:9:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_180_by_1",
                "typeString": "int_const 180"
              },
              "value": "3"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "2818d036",
            "id": 16,
            "mutability": "constant",
            "name": "minTimeToMakeProposals",
            "nameLocation": "2520:22:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2499:55:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 14,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2499:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 15,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2545:9:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "functionSelector": "945837e2",
            "id": 19,
            "mutability": "constant",
            "name": "timeToVote",
            "nameLocation": "2629:10:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2608:43:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 17,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2608:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "32",
              "id": 18,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2642:9:0",
              "subdenomination": "minutes",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_120_by_1",
                "typeString": "int_const 120"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "06fdde03",
            "id": 21,
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2709:4:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2695:18:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 20,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2695:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5af82abf",
            "id": 23,
            "mutability": "mutable",
            "name": "director",
            "nameLocation": "2777:8:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2762:23:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 22,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2762:7:0",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "cce54917",
            "id": 25,
            "mutability": "mutable",
            "name": "stocksCount",
            "nameLocation": "2857:11:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2843:25:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 24,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "2843:6:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "dae896cf",
            "id": 27,
            "mutability": "mutable",
            "name": "lastMeetingTime",
            "nameLocation": "2967:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "2955:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 26,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "2955:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "bdf39a07",
            "id": 29,
            "mutability": "mutable",
            "name": "isMeeting",
            "nameLocation": "3074:9:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "3062:21:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 28,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "3062:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1f1dfdca",
            "id": 34,
            "mutability": "mutable",
            "name": "stockholders",
            "nameLocation": "3209:12:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "3170:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
              "typeString": "mapping(address => struct Stocks.Stockholder)"
            },
            "typeName": {
              "id": 33,
              "keyType": {
                "id": 30,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3178:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "3170:31:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                "typeString": "mapping(address => struct Stocks.Stockholder)"
              },
              "valueType": {
                "id": 32,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 31,
                  "name": "Stockholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10,
                  "src": "3189:11:0"
                },
                "referencedDeclaration": 10,
                "src": "3189:11:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stockholder_$10_storage_ptr",
                  "typeString": "struct Stocks.Stockholder"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "54413d41",
            "id": 37,
            "mutability": "mutable",
            "name": "stockholderList",
            "nameLocation": "3423:15:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "3406:32:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 35,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "3406:7:0",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 36,
              "nodeType": "ArrayTypeName",
              "src": "3406:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "1c24c8e8",
            "id": 41,
            "mutability": "mutable",
            "name": "dividendProposals",
            "nameLocation": "3757:17:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "3723:51:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
              "typeString": "mapping(uint256 => uint32)"
            },
            "typeName": {
              "id": 40,
              "keyType": {
                "id": 38,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3731:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "3723:26:0",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                "typeString": "mapping(uint256 => uint32)"
              },
              "valueType": {
                "id": 39,
                "name": "uint32",
                "nodeType": "ElementaryTypeName",
                "src": "3742:6:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "3342a52d",
            "id": 44,
            "mutability": "mutable",
            "name": "proposedDividendSizes",
            "nameLocation": "3999:21:0",
            "nodeType": "VariableDeclaration",
            "scope": 731,
            "src": "3982:38:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 42,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "3982:7:0",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 43,
              "nodeType": "ArrayTypeName",
              "src": "3982:9:0",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 88,
              "nodeType": "Block",
              "src": "4473:255:0",
              "statements": [
                {
                  "expression": {
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 51,
                      "name": "director",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 23,
                      "src": "4484:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 52,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "4495:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 53,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "4495:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4484:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "4484:21:0"
                },
                {
                  "expression": {
                    "id": 58,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 56,
                      "name": "stocksCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "4516:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 57,
                      "name": "_stocksCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4530:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4516:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 59,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:26:0"
                },
                {
                  "expression": {
                    "id": 62,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 60,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "4553:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 61,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48,
                      "src": "4560:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "4553:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 63,
                  "nodeType": "ExpressionStatement",
                  "src": "4553:12:0"
                },
                {
                  "expression": {
                    "id": 72,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 64,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "4576:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 69,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 67,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "4597:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            ],
                            "id": 66,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4589:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 65,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4589:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 68,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4589:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "4576:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 70,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "4576:39:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 71,
                      "name": "_stocksCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46,
                      "src": "4618:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "4576:54:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 73,
                  "nodeType": "ExpressionStatement",
                  "src": "4576:54:0"
                },
                {
                  "expression": {
                    "id": 77,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 74,
                      "name": "lastMeetingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "4641:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 75,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "4659:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 76,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "4659:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4641:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 78,
                  "nodeType": "ExpressionStatement",
                  "src": "4641:33:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4714:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Stocks_$731",
                              "typeString": "contract Stocks"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Stocks_$731",
                              "typeString": "contract Stocks"
                            }
                          ],
                          "id": 83,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4706:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 82,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4706:7:0",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4706:13:0",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 79,
                        "name": "stockholderList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "4685:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 81,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "4685:20:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                        "typeString": "function (address[] storage pointer,address)"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4685:35:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "4685:35:0"
                }
              ]
            },
            "id": 89,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 49,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46,
                  "mutability": "mutable",
                  "name": "_stocksCount",
                  "nameLocation": "4438:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "4431:19:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 45,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4431:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "4466:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 89,
                  "src": "4452:19:0",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 47,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4452:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4430:42:0"
            },
            "returnParameters": {
              "id": 50,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4473:0:0"
            },
            "scope": 731,
            "src": "4419:309:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 100,
              "nodeType": "Block",
              "src": "4806:88:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 95,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 92,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4825:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 93,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4825:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 94,
                          "name": "director",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 23,
                          "src": "4839:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4825:22:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f74206469726563746f72",
                        "id": 96,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4849:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5",
                          "typeString": "literal_string \"Caller is not director\""
                        },
                        "value": "Caller is not director"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e72706a8a48cc98b323057ca8183c181868be0ecd80cbb6fece31632997567c5",
                          "typeString": "literal_string \"Caller is not director\""
                        }
                      ],
                      "id": 91,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4817:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4817:57:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "4817:57:0"
                },
                {
                  "id": 99,
                  "nodeType": "PlaceholderStatement",
                  "src": "4885:1:0"
                }
              ]
            },
            "id": 101,
            "name": "isDirector",
            "nameLocation": "4793:10:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 90,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4803:2:0"
            },
            "src": "4784:110:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 115,
              "nodeType": "Block",
              "src": "4927:110:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 104,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "4946:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 107,
                            "indexExpression": {
                              "expression": {
                                "id": 105,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "4959:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 106,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "4959:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4946:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "id": 108,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stocksCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "4946:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4986:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4946:41:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43616c6c6572206973206e6f742073746f636b686f6c646572",
                        "id": 111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4989:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046",
                          "typeString": "literal_string \"Caller is not stockholder\""
                        },
                        "value": "Caller is not stockholder"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_44529c55215e3277e08ae8e8e7f392993e38224265e5eb0a6e82e4b552509046",
                          "typeString": "literal_string \"Caller is not stockholder\""
                        }
                      ],
                      "id": 103,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4938:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4938:79:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "4938:79:0"
                },
                {
                  "id": 114,
                  "nodeType": "PlaceholderStatement",
                  "src": "5028:1:0"
                }
              ]
            },
            "id": 116,
            "name": "isStockholder",
            "nameLocation": "4911:13:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4924:2:0"
            },
            "src": "4902:135:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "5091:104:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 123,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "5118:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              ],
                              "id": 122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5110:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 121,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5110:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 124,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5110:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 125,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "5110:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 126,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 118,
                          "src": "5135:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5110:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416d6f756e74206973206c6172676572207468616e2062616c616e6365",
                        "id": 128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5143:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf",
                          "typeString": "literal_string \"Amount is larger than balance\""
                        },
                        "value": "Amount is larger than balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e9bbe1796d49acfffc6db73c56bc615c5b2e1beeed8918e142432abb52d7afcf",
                          "typeString": "literal_string \"Amount is larger than balance\""
                        }
                      ],
                      "id": 120,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5102:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5102:73:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 130,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:73:0"
                },
                {
                  "id": 131,
                  "nodeType": "PlaceholderStatement",
                  "src": "5186:1:0"
                }
              ]
            },
            "id": 133,
            "name": "notLargerThanBalance",
            "nameLocation": "5054:20:0",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "5083:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "5075:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5075:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5074:16:0"
            },
            "src": "5045:150:0",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 136,
              "nodeType": "Block",
              "src": "5398:2:0",
              "statements": []
            },
            "functionSelector": "d0e30db0",
            "id": 137,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "5373:7:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5380:2:0"
            },
            "returnParameters": {
              "id": 135,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5398:0:0"
            },
            "scope": 731,
            "src": "5364:36:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 160,
              "nodeType": "Block",
              "src": "5868:190:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5887:10:0",
                        "subExpression": {
                          "id": 145,
                          "name": "isMeeting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "5888:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e27742077697468647261772066756e647320647572696e6720746865206d656574696e672c20626563617573652069742063616e206d616b65206469766964656e647320696d706f737369626c6520746f20706179",
                        "id": 147,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5899:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
                          "typeString": "literal_string \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\""
                        },
                        "value": "You can't withdraw funds during the meeting, because it can make dividends impossible to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
                          "typeString": "literal_string \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\""
                        }
                      ],
                      "id": 144,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5879:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5879:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 149,
                  "nodeType": "ExpressionStatement",
                  "src": "5879:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 155,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "6036:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            ],
                            "id": 154,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "6028:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 153,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6028:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 156,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6028:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "6028:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 150,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 139,
                        "src": "6005:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6005:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6005:45:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 159,
                  "nodeType": "ExpressionStatement",
                  "src": "6005:45:0"
                }
              ]
            },
            "functionSelector": "51cff8d9",
            "id": 161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 142,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 141,
                  "name": "isDirector",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 101,
                  "src": "5857:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "5857:10:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "5810:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 140,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 139,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "5835:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 161,
                  "src": "5819:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5819:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5818:31:0"
            },
            "returnParameters": {
              "id": 143,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5868:0:0"
            },
            "scope": 731,
            "src": "5801:257:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 185,
              "nodeType": "Block",
              "src": "6585:175:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "6604:10:0",
                        "subExpression": {
                          "id": 174,
                          "name": "isMeeting",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 29,
                          "src": "6605:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752063616e27742077697468647261772066756e647320647572696e6720746865206d656574696e672c20626563617573652069742063616e206d616b65206469766964656e647320696d706f737369626c6520746f20706179",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6616:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
                          "typeString": "literal_string \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\""
                        },
                        "value": "You can't withdraw funds during the meeting, because it can make dividends impossible to pay"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_06cdaa06ec43e5b34dab57a9608d86f9ef70fe2362aaf664f979fcc677f5d9ce",
                          "typeString": "literal_string \"You can't withdraw funds during the meeting, because it can make dividends impossible to pay\""
                        }
                      ],
                      "id": 173,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6596:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6596:115:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "6596:115:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 182,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 165,
                        "src": "6745:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 179,
                        "name": "targetAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 163,
                        "src": "6722:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 181,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6722:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 183,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6722:30:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 184,
                  "nodeType": "ExpressionStatement",
                  "src": "6722:30:0"
                }
              ]
            },
            "functionSelector": "f3fef3a3",
            "id": 186,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 168,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 167,
                  "name": "isDirector",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 101,
                  "src": "6545:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6545:10:0"
              },
              {
                "arguments": [
                  {
                    "id": 170,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 165,
                    "src": "6577:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 171,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 169,
                  "name": "notLargerThanBalance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 133,
                  "src": "6556:20:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "6556:28:0"
              }
            ],
            "name": "withdraw",
            "nameLocation": "6482:8:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 163,
                  "mutability": "mutable",
                  "name": "targetAddress",
                  "nameLocation": "6507:13:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "6491:29:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6491:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 165,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "6530:6:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 186,
                  "src": "6522:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 164,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6522:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6490:47:0"
            },
            "returnParameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6585:0:0"
            },
            "scope": 731,
            "src": "6473:287:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 220,
              "nodeType": "Block",
              "src": "6889:260:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 194,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "6908:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 197,
                            "indexExpression": {
                              "expression": {
                                "id": 195,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "6921:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "6921:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6908:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "id": 198,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stocksCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "6908:36:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 199,
                          "name": "sellCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 190,
                          "src": "6948:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "6908:49:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520747279696e6720746f206372656174652073656c6c206f7264657220666f72206d6f72652073746f636b73207468616e20796f752068617665",
                        "id": 201,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6959:67:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826",
                          "typeString": "literal_string \"You are trying to create sell order for more stocks than you have\""
                        },
                        "value": "You are trying to create sell order for more stocks than you have"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c9bb473afb7099e93dae47eeb8208470abb8b06838f08b0b033800e3e63bd826",
                          "typeString": "literal_string \"You are trying to create sell order for more stocks than you have\""
                        }
                      ],
                      "id": 193,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "6900:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6900:127:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "6900:127:0"
                },
                {
                  "expression": {
                    "id": 210,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 204,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7038:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 207,
                        "indexExpression": {
                          "expression": {
                            "id": 205,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7051:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7051:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7038:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "7038:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 209,
                      "name": "sellPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "7075:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7038:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 211,
                  "nodeType": "ExpressionStatement",
                  "src": "7038:46:0"
                },
                {
                  "expression": {
                    "id": 218,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 212,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7095:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 215,
                        "indexExpression": {
                          "expression": {
                            "id": 213,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "7108:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 214,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7108:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7095:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 216,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "7095:34:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 217,
                      "name": "sellCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 190,
                      "src": "7132:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7095:46:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 219,
                  "nodeType": "ExpressionStatement",
                  "src": "7095:46:0"
                }
              ]
            },
            "functionSelector": "068bb026",
            "id": 221,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sellOrder",
            "nameLocation": "6835:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 188,
                  "mutability": "mutable",
                  "name": "sellPrice",
                  "nameLocation": "6853:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "6845:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6845:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 190,
                  "mutability": "mutable",
                  "name": "sellCount",
                  "nameLocation": "6871:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 221,
                  "src": "6864:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 189,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6864:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6844:37:0"
            },
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6889:0:0"
            },
            "scope": 731,
            "src": "6826:323:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 263,
              "nodeType": "Block",
              "src": "7414:276:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 231,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "7433:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 236,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 234,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "7454:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_Stocks_$731",
                                    "typeString": "contract Stocks"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_Stocks_$731",
                                    "typeString": "contract Stocks"
                                  }
                                ],
                                "id": 233,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7446:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 232,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7446:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7446:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7433:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "id": 237,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stocksCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3,
                          "src": "7433:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 238,
                          "name": "sellCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 225,
                          "src": "7476:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "7433:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f752061726520747279696e6720746f206372656174652073656c6c206f7264657220666f72206d6f72652073746f636b73207468616e2074686520636f6d70616e7920686173",
                        "id": 240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7487:74:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0",
                          "typeString": "literal_string \"You are trying to create sell order for more stocks than the company has\""
                        },
                        "value": "You are trying to create sell order for more stocks than the company has"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f84c9ddef4bc21abba0f0931a53c2c8e196ee9e1eeac11ac014b5e09da4c06f0",
                          "typeString": "literal_string \"You are trying to create sell order for more stocks than the company has\""
                        }
                      ],
                      "id": 230,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7425:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7425:137:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 242,
                  "nodeType": "ExpressionStatement",
                  "src": "7425:137:0"
                },
                {
                  "expression": {
                    "id": 251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 243,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7573:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 248,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 246,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7594:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            ],
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7586:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 244,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7586:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7586:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7573:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 249,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "7573:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 250,
                      "name": "sellPrice",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 223,
                      "src": "7613:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7573:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 252,
                  "nodeType": "ExpressionStatement",
                  "src": "7573:49:0"
                },
                {
                  "expression": {
                    "id": 261,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 253,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "7633:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 258,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 256,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967268,
                              "src": "7654:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Stocks_$731",
                                "typeString": "contract Stocks"
                              }
                            ],
                            "id": 255,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "7646:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 254,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7646:7:0",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7646:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7633:27:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 259,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "7633:37:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 260,
                      "name": "sellCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "7673:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "7633:49:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 262,
                  "nodeType": "ExpressionStatement",
                  "src": "7633:49:0"
                }
              ]
            },
            "functionSelector": "92b80242",
            "id": 264,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 228,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 227,
                  "name": "isDirector",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 101,
                  "src": "7403:10:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "7403:10:0"
              }
            ],
            "name": "companySellOrder",
            "nameLocation": "7342:16:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 223,
                  "mutability": "mutable",
                  "name": "sellPrice",
                  "nameLocation": "7367:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "7359:17:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 222,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7359:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 225,
                  "mutability": "mutable",
                  "name": "sellCount",
                  "nameLocation": "7385:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "7378:16:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 224,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7378:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7358:37:0"
            },
            "returnParameters": {
              "id": 229,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7414:0:0"
            },
            "scope": 731,
            "src": "7333:357:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 438,
              "nodeType": "Block",
              "src": "8119:1601:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 272,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "8138:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 274,
                            "indexExpression": {
                              "id": 273,
                              "name": "sellerStockholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "8151:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "8138:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "id": 275,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sellCount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 7,
                          "src": "8138:41:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 276,
                          "name": "buyCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 268,
                          "src": "8183:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "src": "8138:53:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "417474656d7074656420746f20627579206d6f72652073746f636b73207468616e2073656c6c65722069732077696c6c696e6720746f2073656c6c",
                        "id": 278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8193:61:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262",
                          "typeString": "literal_string \"Attempted to buy more stocks than seller is willing to sell\""
                        },
                        "value": "Attempted to buy more stocks than seller is willing to sell"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_450c760c2c40aa225d981f3aaa7b8ef893def06ef8c2bea8f61315f3e95a3262",
                          "typeString": "literal_string \"Attempted to buy more stocks than seller is willing to sell\""
                        }
                      ],
                      "id": 271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8130:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8130:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 280,
                  "nodeType": "ExpressionStatement",
                  "src": "8130:125:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "8274:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "8274:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 289,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 284,
                                "name": "stockholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "8287:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                  "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                                }
                              },
                              "id": 286,
                              "indexExpression": {
                                "id": 285,
                                "name": "sellerStockholder",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 266,
                                "src": "8300:17:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8287:31:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                                "typeString": "struct Stocks.Stockholder storage ref"
                              }
                            },
                            "id": 287,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellPrice",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 5,
                            "src": "8287:41:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 288,
                            "name": "buyCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 268,
                            "src": "8331:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "8287:52:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8274:65:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206469646e27742073656e6420656e6f756768206d6f6e657920746f206275792073746f636b73",
                        "id": 291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8341:44:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a",
                          "typeString": "literal_string \"You didn't send enough money to buy stocks\""
                        },
                        "value": "You didn't send enough money to buy stocks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce8beede2e9d343d7b29c0e0ab260c321c839ef46d0ebc6c6cde6ddae8a7ea9a",
                          "typeString": "literal_string \"You didn't send enough money to buy stocks\""
                        }
                      ],
                      "id": 281,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8266:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 292,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8266:120:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 293,
                  "nodeType": "ExpressionStatement",
                  "src": "8266:120:0"
                },
                {
                  "assignments": [
                    295
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 295,
                      "mutability": "mutable",
                      "name": "transactionValue",
                      "nameLocation": "8405:16:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 438,
                      "src": "8397:24:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 294,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8397:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 302,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 301,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 296,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "8424:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 298,
                        "indexExpression": {
                          "id": 297,
                          "name": "sellerStockholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8437:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8424:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 299,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sellPrice",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 5,
                      "src": "8424:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "*",
                    "rightExpression": {
                      "id": 300,
                      "name": "buyCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "8468:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8424:52:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8397:79:0"
                },
                {
                  "expression": {
                    "id": 308,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 303,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "8487:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 305,
                        "indexExpression": {
                          "id": 304,
                          "name": "sellerStockholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8500:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8487:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 306,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sellCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 7,
                      "src": "8487:41:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 307,
                      "name": "buyCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "8532:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8487:53:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 309,
                  "nodeType": "ExpressionStatement",
                  "src": "8487:53:0"
                },
                {
                  "expression": {
                    "id": 315,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 310,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "8551:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 312,
                        "indexExpression": {
                          "id": 311,
                          "name": "sellerStockholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8564:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8551:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 313,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "8551:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 314,
                      "name": "buyCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "8598:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "8551:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 316,
                  "nodeType": "ExpressionStatement",
                  "src": "8551:55:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 317,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "8738:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 319,
                        "indexExpression": {
                          "id": 318,
                          "name": "sellerStockholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "8751:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "8738:31:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 320,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "8738:43:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "8785:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "8738:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 381,
                  "nodeType": "IfStatement",
                  "src": "8734:571:0",
                  "trueBody": {
                    "id": 380,
                    "nodeType": "Block",
                    "src": "8788:517:0",
                    "statements": [
                      {
                        "assignments": [
                          324
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 324,
                            "mutability": "mutable",
                            "name": "stockholderIndex",
                            "nameLocation": "8808:16:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 380,
                            "src": "8803:21:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 323,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8803:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 326,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "8827:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8803:25:0"
                      },
                      {
                        "body": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 342,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 338,
                                "name": "stockholderList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37,
                                "src": "8914:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                  "typeString": "address[] storage ref"
                                }
                              },
                              "id": 340,
                              "indexExpression": {
                                "id": 339,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 328,
                                "src": "8930:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "8914:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 341,
                              "name": "sellerStockholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "8936:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "src": "8914:39:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "id": 349,
                          "nodeType": "IfStatement",
                          "src": "8910:136:0",
                          "trueBody": {
                            "id": 348,
                            "nodeType": "Block",
                            "src": "8955:91:0",
                            "statements": [
                              {
                                "expression": {
                                  "id": 345,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 343,
                                    "name": "stockholderIndex",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 324,
                                    "src": "8978:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "id": 344,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 328,
                                    "src": "8997:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "8978:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "id": 346,
                                "nodeType": "ExpressionStatement",
                                "src": "8978:20:0"
                              },
                              {
                                "id": 347,
                                "nodeType": "Break",
                                "src": "9021:5:0"
                              }
                            ]
                          }
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 331,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 328,
                            "src": "8860:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 332,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "8864:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "8864:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8860:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 350,
                        "initializationExpression": {
                          "assignments": [
                            328
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 328,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "8853:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 350,
                              "src": "8848:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 327,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8848:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 330,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8857:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "8848:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 336,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "8888:3:0",
                            "subExpression": {
                              "id": 335,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 328,
                              "src": "8888:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 337,
                          "nodeType": "ExpressionStatement",
                          "src": "8888:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "8843:203:0"
                      },
                      {
                        "expression": {
                          "id": 360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 351,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "9060:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 353,
                            "indexExpression": {
                              "id": 352,
                              "name": "stockholderIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 324,
                              "src": "9076:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9060:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 354,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "9096:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 359,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 355,
                                  "name": "stockholderList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "9112:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 356,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9112:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 357,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9137:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9112:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9096:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "9060:79:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 361,
                        "nodeType": "ExpressionStatement",
                        "src": "9060:79:0"
                      },
                      {
                        "expression": {
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "9154:50:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 362,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "9161:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 367,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 366,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 363,
                                  "name": "stockholderList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "9177:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 364,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "9177:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 365,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "9202:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "9177:26:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9161:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 369,
                        "nodeType": "ExpressionStatement",
                        "src": "9154:50:0"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 370,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "9219:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "pop",
                            "nodeType": "MemberAccess",
                            "src": "9219:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                              "typeString": "function (address[] storage pointer)"
                            }
                          },
                          "id": 373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9219:21:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 374,
                        "nodeType": "ExpressionStatement",
                        "src": "9219:21:0"
                      },
                      {
                        "expression": {
                          "id": 378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "9255:38:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 375,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "9262:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 377,
                            "indexExpression": {
                              "id": 376,
                              "name": "sellerStockholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 266,
                              "src": "9275:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "9262:31:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 379,
                        "nodeType": "ExpressionStatement",
                        "src": "9255:38:0"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 382,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "9319:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 385,
                        "indexExpression": {
                          "expression": {
                            "id": 383,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9332:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9332:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9319:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 386,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "9319:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 387,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9359:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9319:41:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 396,
                  "nodeType": "IfStatement",
                  "src": "9315:92:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 392,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9396:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 393,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9396:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "id": 389,
                          "name": "stockholderList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37,
                          "src": "9375:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_storage",
                            "typeString": "address[] storage ref"
                          }
                        },
                        "id": 391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "push",
                        "nodeType": "MemberAccess",
                        "src": "9375:20:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$bound_to$_t_array$_t_address_$dyn_storage_ptr_$",
                          "typeString": "function (address[] storage pointer,address)"
                        }
                      },
                      "id": 394,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9375:32:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 395,
                    "nodeType": "ExpressionStatement",
                    "src": "9375:32:0"
                  }
                },
                {
                  "expression": {
                    "id": 403,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 397,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "9418:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 400,
                        "indexExpression": {
                          "expression": {
                            "id": 398,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "9431:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "9431:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "9418:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 401,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "9418:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 402,
                      "name": "buyCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 268,
                      "src": "9458:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "9418:48:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 404,
                  "nodeType": "ExpressionStatement",
                  "src": "9418:48:0"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 405,
                      "name": "sellerStockholder",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 266,
                      "src": "9481:17:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 408,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9510:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Stocks_$731",
                            "typeString": "contract Stocks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Stocks_$731",
                            "typeString": "contract Stocks"
                          }
                        ],
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9502:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9502:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 409,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9502:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9481:34:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 417,
                  "nodeType": "IfStatement",
                  "src": "9477:97:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 414,
                          "name": "transactionValue",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 295,
                          "src": "9557:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 411,
                          "name": "sellerStockholder",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 266,
                          "src": "9530:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "9530:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9530:44:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 416,
                    "nodeType": "ExpressionStatement",
                    "src": "9530:44:0"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 418,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "9612:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 419,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "9612:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 422,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967268,
                          "src": "9634:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Stocks_$731",
                            "typeString": "contract Stocks"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Stocks_$731",
                            "typeString": "contract Stocks"
                          }
                        ],
                        "id": 421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "9626:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9626:7:0",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9626:13:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "9612:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 437,
                  "nodeType": "IfStatement",
                  "src": "9608:104:0",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 434,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 431,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "9683:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 432,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "9683:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 433,
                            "name": "transactionValue",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 295,
                            "src": "9695:16:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9683:28:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 427,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "9662:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "9662:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 426,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "9654:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_payable_$",
                              "typeString": "type(address payable)"
                            },
                            "typeName": {
                              "id": 425,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "9654:8:0",
                              "stateMutability": "payable",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 429,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9654:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "transfer",
                        "nodeType": "MemberAccess",
                        "src": "9654:28:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256)"
                        }
                      },
                      "id": 435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "9654:58:0",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 436,
                    "nodeType": "ExpressionStatement",
                    "src": "9654:58:0"
                  }
                }
              ]
            },
            "functionSelector": "0a09c554",
            "id": 439,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "buyStocks",
            "nameLocation": "8042:9:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 269,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 266,
                  "mutability": "mutable",
                  "name": "sellerStockholder",
                  "nameLocation": "8068:17:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "8052:33:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 265,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8052:15:0",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 268,
                  "mutability": "mutable",
                  "name": "buyCount",
                  "nameLocation": "8094:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 439,
                  "src": "8087:15:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 267,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8087:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8051:52:0"
            },
            "returnParameters": {
              "id": 270,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8119:0:0"
            },
            "scope": 731,
            "src": "8033:1687:0",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 522,
              "nodeType": "Block",
              "src": "9891:1189:0",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 450,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 448,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 446,
                                "name": "lastMeetingTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "10087:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 447,
                                "name": "timeBetweenMeetings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "10105:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10087:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 449,
                              "name": "minTimeToMakeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "10127:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10087:62:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 451,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "10152:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 452,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10152:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10087:80:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 454,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10086:82:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 455,
                              "name": "proposedDividendSizes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44,
                              "src": "10173:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10173:28:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10205:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10173:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        }
                      ],
                      "id": 459,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "10172:35:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "10086:121:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 470,
                  "nodeType": "IfStatement",
                  "src": "10082:272:0",
                  "trueBody": {
                    "expression": {
                      "id": 468,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 461,
                        "name": "lastMeetingTime",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 27,
                        "src": "10274:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 462,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "10292:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "10292:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 464,
                            "name": "timeBetweenMeetings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "10310:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10292:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 466,
                          "name": "minTimeToMakeProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 16,
                          "src": "10332:22:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10292:62:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "10274:80:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 469,
                    "nodeType": "ExpressionStatement",
                    "src": "10274:80:0"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 476,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 474,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 472,
                              "name": "lastMeetingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "10402:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 473,
                              "name": "timeBetweenMeetings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "10420:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "10402:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 475,
                            "name": "minTimeToMakeProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "10442:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10402:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 477,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "10468:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 478,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10468:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10402:81:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "50726f706f73616c2074696d6520666f722074686973206d656574696e672068617320656e646564",
                        "id": 480,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10485:42:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17",
                          "typeString": "literal_string \"Proposal time for this meeting has ended\""
                        },
                        "value": "Proposal time for this meeting has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_07181a69a030849a3574f87a8b102d6269ddacbc438783387bfae9d207748e17",
                          "typeString": "literal_string \"Proposal time for this meeting has ended\""
                        }
                      ],
                      "id": 471,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10394:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 481,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10394:134:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 482,
                  "nodeType": "ExpressionStatement",
                  "src": "10394:134:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 489,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 486,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 484,
                            "name": "lastMeetingTime",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "10547:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 485,
                            "name": "timeBetweenMeetings",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13,
                            "src": "10565:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10547:37:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 487,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "10587:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 488,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "10587:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10547:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4d656574696e672074696d65206861736e277420636f6d65",
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10604:26:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b",
                          "typeString": "literal_string \"Meeting time hasn't come\""
                        },
                        "value": "Meeting time hasn't come"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e090533e1747890653222bef2640f70ac9ea3aac83daacd1002eea8bf4856d4b",
                          "typeString": "literal_string \"Meeting time hasn't come\""
                        }
                      ],
                      "id": 483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10539:92:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "10539:92:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 494,
                            "name": "dividendSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 441,
                            "src": "10650:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 495,
                            "name": "stocksCount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 25,
                            "src": "10665:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "10650:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "arguments": [
                              {
                                "id": 499,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "10688:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              ],
                              "id": 498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10680:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 497,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "10680:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 500,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10680:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "id": 501,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balance",
                          "nodeType": "MemberAccess",
                          "src": "10680:21:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "10650:51:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "436f6d70616e7920646f65736e2774206861766520656e6f756768206d6f6e657920746f207061792074686174206c61726765206469766964656e6473",
                        "id": 503,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10703:63:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84",
                          "typeString": "literal_string \"Company doesn't have enough money to pay that large dividends\""
                        },
                        "value": "Company doesn't have enough money to pay that large dividends"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f31435cccc34436c5109d6b8b27b1c5867130d53142cbc84bdfcad84d8060d84",
                          "typeString": "literal_string \"Company doesn't have enough money to pay that large dividends\""
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10642:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 504,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10642:125:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 505,
                  "nodeType": "ExpressionStatement",
                  "src": "10642:125:0"
                },
                {
                  "expression": {
                    "id": 508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 506,
                      "name": "isMeeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "10778:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 507,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "10790:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "10778:16:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 509,
                  "nodeType": "ExpressionStatement",
                  "src": "10778:16:0"
                },
                {
                  "expression": {
                    "id": 514,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 510,
                        "name": "dividendProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "10986:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                          "typeString": "mapping(uint256 => uint32)"
                        }
                      },
                      "id": 512,
                      "indexExpression": {
                        "id": 511,
                        "name": "dividendSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "11004:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10986:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "31",
                      "id": 513,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11020:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "10986:35:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 515,
                  "nodeType": "ExpressionStatement",
                  "src": "10986:35:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 519,
                        "name": "dividendSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 441,
                        "src": "11059:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 516,
                        "name": "proposedDividendSizes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "11032:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 518,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "11032:26:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
                        "typeString": "function (uint256[] storage pointer,uint256)"
                      }
                    },
                    "id": 520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11032:40:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 521,
                  "nodeType": "ExpressionStatement",
                  "src": "11032:40:0"
                }
              ]
            },
            "functionSelector": "b544e611",
            "id": 523,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 444,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 443,
                  "name": "isStockholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "9877:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "9877:13:0"
              }
            ],
            "name": "makeDividendsProposal",
            "nameLocation": "9826:21:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 441,
                  "mutability": "mutable",
                  "name": "dividendSize",
                  "nameLocation": "9856:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 523,
                  "src": "9848:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9848:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9847:22:0"
            },
            "returnParameters": {
              "id": 445,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9891:0:0"
            },
            "scope": 731,
            "src": "9817:1263:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 593,
              "nodeType": "Block",
              "src": "11346:598:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "11365:31:0",
                        "subExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 531,
                              "name": "stockholders",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 34,
                              "src": "11366:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                              }
                            },
                            "id": 534,
                            "indexExpression": {
                              "expression": {
                                "id": 532,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "11379:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "11379:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "11366:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                              "typeString": "struct Stocks.Stockholder storage ref"
                            }
                          },
                          "id": 535,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "voted",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 9,
                          "src": "11366:30:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "596f75206861766520616c726561647920766f746564",
                        "id": 537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11398:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
                          "typeString": "literal_string \"You have already voted\""
                        },
                        "value": "You have already voted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f717c48f565c1f6c8c7139cf54f577e481ac65760eb92c077a08597c622f2a8a",
                          "typeString": "literal_string \"You have already voted\""
                        }
                      ],
                      "id": 530,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11357:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11357:66:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 539,
                  "nodeType": "ExpressionStatement",
                  "src": "11357:66:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 545,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 541,
                            "name": "dividendProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41,
                            "src": "11442:17:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                              "typeString": "mapping(uint256 => uint32)"
                            }
                          },
                          "id": 543,
                          "indexExpression": {
                            "id": 542,
                            "name": "dividendSize",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 525,
                            "src": "11460:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11442:31:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 544,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11476:1:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "11442:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686973206469766964656e6420616d6f756e74206861736e2774206265656e2070726f706f736564",
                        "id": 546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11479:43:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2",
                          "typeString": "literal_string \"This dividend amount hasn't been proposed\""
                        },
                        "value": "This dividend amount hasn't been proposed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68d1817a80c48d5e71d71ecbe4d8b5d0049f4fb3e9de54ad0939c30a322632e2",
                          "typeString": "literal_string \"This dividend amount hasn't been proposed\""
                        }
                      ],
                      "id": 540,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11434:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11434:89:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 548,
                  "nodeType": "ExpressionStatement",
                  "src": "11434:89:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 557,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 554,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 552,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 550,
                              "name": "lastMeetingTime",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 27,
                              "src": "11542:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 551,
                              "name": "timeBetweenMeetings",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13,
                              "src": "11560:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11542:37:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 553,
                            "name": "minTimeToMakeProposals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16,
                            "src": "11582:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11542:62:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 555,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "11607:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 556,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11607:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11542:80:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e672074696d65206861736e277420636f6d65",
                        "id": 558,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11624:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac",
                          "typeString": "literal_string \"Voting time hasn't come\""
                        },
                        "value": "Voting time hasn't come"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_22e6fa0d82d3c105e17f951391399d267d6a47b68121ae32541d6a20396ca0ac",
                          "typeString": "literal_string \"Voting time hasn't come\""
                        }
                      ],
                      "id": 549,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11534:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11534:116:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 560,
                  "nodeType": "ExpressionStatement",
                  "src": "11534:116:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 566,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 564,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 562,
                                "name": "lastMeetingTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "11669:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 563,
                                "name": "timeBetweenMeetings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "11687:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11669:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 565,
                              "name": "minTimeToMakeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "11709:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "11669:62:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 567,
                            "name": "timeToVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "11734:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11669:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 569,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "11748:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 570,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "11748:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11669:94:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "566f74696e672074696d6520666f722074686973206d656574696e672068617320656e646564",
                        "id": 572,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11765:40:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520",
                          "typeString": "literal_string \"Voting time for this meeting has ended\""
                        },
                        "value": "Voting time for this meeting has ended"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a53b52a3cdae81fa00ec1c22049a95f0e9520854a255e7655c13ce5625ec6520",
                          "typeString": "literal_string \"Voting time for this meeting has ended\""
                        }
                      ],
                      "id": 561,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11661:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 573,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11661:145:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 574,
                  "nodeType": "ExpressionStatement",
                  "src": "11661:145:0"
                },
                {
                  "expression": {
                    "id": 581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 575,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "11817:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 578,
                        "indexExpression": {
                          "expression": {
                            "id": 576,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11830:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11830:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11817:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 579,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "voted",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9,
                      "src": "11817:30:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 580,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11850:4:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "11817:37:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 582,
                  "nodeType": "ExpressionStatement",
                  "src": "11817:37:0"
                },
                {
                  "expression": {
                    "id": 591,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 583,
                        "name": "dividendProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41,
                        "src": "11865:17:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                          "typeString": "mapping(uint256 => uint32)"
                        }
                      },
                      "id": 585,
                      "indexExpression": {
                        "id": 584,
                        "name": "dividendSize",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 525,
                        "src": "11883:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11865:31:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 586,
                          "name": "stockholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34,
                          "src": "11900:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                            "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                          }
                        },
                        "id": 589,
                        "indexExpression": {
                          "expression": {
                            "id": 587,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "11913:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 588,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "11913:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11900:24:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                          "typeString": "struct Stocks.Stockholder storage ref"
                        }
                      },
                      "id": 590,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "stocksCount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3,
                      "src": "11900:36:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "11865:71:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 592,
                  "nodeType": "ExpressionStatement",
                  "src": "11865:71:0"
                }
              ]
            },
            "functionSelector": "0121b93f",
            "id": 594,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 528,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 527,
                  "name": "isStockholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "11332:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "11332:13:0"
              }
            ],
            "name": "vote",
            "nameLocation": "11298:4:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 526,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 525,
                  "mutability": "mutable",
                  "name": "dividendSize",
                  "nameLocation": "11311:12:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 594,
                  "src": "11303:20:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 524,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11303:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11302:22:0"
            },
            "returnParameters": {
              "id": 529,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11346:0:0"
            },
            "scope": 731,
            "src": "11289:655:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 729,
              "nodeType": "Block",
              "src": "12193:1111:0",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 600,
                                "name": "lastMeetingTime",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 27,
                                "src": "12212:15:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 601,
                                "name": "timeBetweenMeetings",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13,
                                "src": "12230:19:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "12212:37:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 603,
                              "name": "minTimeToMakeProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16,
                              "src": "12252:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "12212:62:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 605,
                            "name": "timeToVote",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 19,
                            "src": "12277:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12212:75:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "expression": {
                            "id": 607,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967292,
                            "src": "12290:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12290:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12212:93:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469766964656e647320706179696e672074696d65206861736e277420636f6d65",
                        "id": 610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12307:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401",
                          "typeString": "literal_string \"Dividends paying time hasn't come\""
                        },
                        "value": "Dividends paying time hasn't come"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_99c3498403fdde56264896e19def528c61f90dc518407a6c87aa4a55f01d6401",
                          "typeString": "literal_string \"Dividends paying time hasn't come\""
                        }
                      ],
                      "id": 599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12204:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12204:139:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 612,
                  "nodeType": "ExpressionStatement",
                  "src": "12204:139:0"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 614,
                        "name": "isMeeting",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 29,
                        "src": "12362:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4469766964656e64732063616e206f6e6c7920626520706169642061742074686520656e64206f662061206d656574696e67",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12373:52:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70",
                          "typeString": "literal_string \"Dividends can only be paid at the end of a meeting\""
                        },
                        "value": "Dividends can only be paid at the end of a meeting"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_70810c36ecdec9347c4bacfb3951a2176267637fe210799e50f9bb9611cbdf70",
                          "typeString": "literal_string \"Dividends can only be paid at the end of a meeting\""
                        }
                      ],
                      "id": 613,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12354:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12354:72:0",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "12354:72:0"
                },
                {
                  "assignments": [
                    619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 619,
                      "mutability": "mutable",
                      "name": "max_votes",
                      "nameLocation": "12444:9:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "12437:16:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 618,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12437:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 621,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 620,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12456:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12437:20:0"
                },
                {
                  "assignments": [
                    623
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 623,
                      "mutability": "mutable",
                      "name": "most_voted_dividends",
                      "nameLocation": "12476:20:0",
                      "nodeType": "VariableDeclaration",
                      "scope": 729,
                      "src": "12468:28:0",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 622,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12468:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 625,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12499:1:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12468:32:0"
                },
                {
                  "body": {
                    "id": 667,
                    "nodeType": "Block",
                    "src": "12567:308:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          },
                          "id": 643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 637,
                              "name": "dividendProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "12586:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                                "typeString": "mapping(uint256 => uint32)"
                              }
                            },
                            "id": 641,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 638,
                                "name": "proposedDividendSizes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "12604:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 640,
                              "indexExpression": {
                                "id": 639,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "12626:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12604:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12586:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 642,
                            "name": "max_votes",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 619,
                            "src": "12632:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "12586:55:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 659,
                        "nodeType": "IfStatement",
                        "src": "12582:217:0",
                        "trueBody": {
                          "id": 658,
                          "nodeType": "Block",
                          "src": "12643:156:0",
                          "statements": [
                            {
                              "expression": {
                                "id": 650,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 644,
                                  "name": "max_votes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 619,
                                  "src": "12662:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 645,
                                    "name": "dividendProposals",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41,
                                    "src": "12674:17:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                                      "typeString": "mapping(uint256 => uint32)"
                                    }
                                  },
                                  "id": 649,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 646,
                                      "name": "proposedDividendSizes",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 44,
                                      "src": "12692:21:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                        "typeString": "uint256[] storage ref"
                                      }
                                    },
                                    "id": 648,
                                    "indexExpression": {
                                      "id": 647,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 627,
                                      "src": "12714:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12692:24:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12674:43:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "12662:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              "id": 651,
                              "nodeType": "ExpressionStatement",
                              "src": "12662:55:0"
                            },
                            {
                              "expression": {
                                "id": 656,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 652,
                                  "name": "most_voted_dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 623,
                                  "src": "12736:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 653,
                                    "name": "proposedDividendSizes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 44,
                                    "src": "12759:21:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                      "typeString": "uint256[] storage ref"
                                    }
                                  },
                                  "id": 655,
                                  "indexExpression": {
                                    "id": 654,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 627,
                                    "src": "12781:1:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "12759:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12736:47:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 657,
                              "nodeType": "ExpressionStatement",
                              "src": "12736:47:0"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 665,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "12813:50:0",
                          "subExpression": {
                            "baseExpression": {
                              "id": 660,
                              "name": "dividendProposals",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41,
                              "src": "12820:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint32_$",
                                "typeString": "mapping(uint256 => uint32)"
                              }
                            },
                            "id": 664,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 661,
                                "name": "proposedDividendSizes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 44,
                                "src": "12838:21:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                  "typeString": "uint256[] storage ref"
                                }
                              },
                              "id": 663,
                              "indexExpression": {
                                "id": 662,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 627,
                                "src": "12860:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12838:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12820:43:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 666,
                        "nodeType": "ExpressionStatement",
                        "src": "12813:50:0"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 633,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 630,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 627,
                      "src": "12528:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 631,
                        "name": "proposedDividendSizes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44,
                        "src": "12532:21:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 632,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12532:28:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12528:32:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 668,
                  "initializationExpression": {
                    "assignments": [
                      627
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 627,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12521:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 668,
                        "src": "12516:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 626,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12516:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 629,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 628,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12525:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12516:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 635,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12562:3:0",
                      "subExpression": {
                        "id": 634,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 627,
                        "src": "12562:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 636,
                    "nodeType": "ExpressionStatement",
                    "src": "12562:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "12511:364:0"
                },
                {
                  "expression": {
                    "id": 670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "12885:28:0",
                    "subExpression": {
                      "id": 669,
                      "name": "proposedDividendSizes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 44,
                      "src": "12892:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 671,
                  "nodeType": "ExpressionStatement",
                  "src": "12885:28:0"
                },
                {
                  "body": {
                    "id": 718,
                    "nodeType": "Block",
                    "src": "12974:251:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 690,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 683,
                                "name": "stockholders",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 34,
                                "src": "12989:12:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                  "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                                }
                              },
                              "id": 687,
                              "indexExpression": {
                                "baseExpression": {
                                  "id": 684,
                                  "name": "stockholderList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37,
                                  "src": "13002:15:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                    "typeString": "address[] storage ref"
                                  }
                                },
                                "id": 686,
                                "indexExpression": {
                                  "id": 685,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 673,
                                  "src": "13018:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13002:18:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "12989:32:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                                "typeString": "struct Stocks.Stockholder storage ref"
                              }
                            },
                            "id": 688,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "voted",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 9,
                            "src": "12989:38:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 689,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13030:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "12989:46:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 691,
                        "nodeType": "ExpressionStatement",
                        "src": "12989:46:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 692,
                              "name": "stockholderList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37,
                              "src": "13054:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                "typeString": "address[] storage ref"
                              }
                            },
                            "id": 694,
                            "indexExpression": {
                              "id": 693,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "13070:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "13054:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 697,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967268,
                                "src": "13084:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_Stocks_$731",
                                  "typeString": "contract Stocks"
                                }
                              ],
                              "id": 696,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "13076:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 695,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "13076:7:0",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 698,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13076:13:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "13054:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 717,
                        "nodeType": "IfStatement",
                        "src": "13050:163:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 714,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 707,
                                  "name": "most_voted_dividends",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 623,
                                  "src": "13145:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "id": 708,
                                      "name": "stockholders",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 34,
                                      "src": "13168:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stockholder_$10_storage_$",
                                        "typeString": "mapping(address => struct Stocks.Stockholder storage ref)"
                                      }
                                    },
                                    "id": 712,
                                    "indexExpression": {
                                      "baseExpression": {
                                        "id": 709,
                                        "name": "stockholderList",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 37,
                                        "src": "13181:15:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                          "typeString": "address[] storage ref"
                                        }
                                      },
                                      "id": 711,
                                      "indexExpression": {
                                        "id": 710,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 673,
                                        "src": "13197:1:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "13181:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13168:32:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Stockholder_$10_storage",
                                      "typeString": "struct Stocks.Stockholder storage ref"
                                    }
                                  },
                                  "id": 713,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "stocksCount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 3,
                                  "src": "13168:44:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint32",
                                    "typeString": "uint32"
                                  }
                                },
                                "src": "13145:67:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 702,
                                      "name": "stockholderList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 37,
                                      "src": "13116:15:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_address_$dyn_storage",
                                        "typeString": "address[] storage ref"
                                      }
                                    },
                                    "id": 704,
                                    "indexExpression": {
                                      "id": 703,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 673,
                                      "src": "13132:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "13116:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 701,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "13108:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_payable_$",
                                    "typeString": "type(address payable)"
                                  },
                                  "typeName": {
                                    "id": 700,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "13108:8:0",
                                    "stateMutability": "payable",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13108:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "transfer",
                              "nodeType": "MemberAccess",
                              "src": "13108:36:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                                "typeString": "function (uint256)"
                              }
                            },
                            "id": 715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13108:105:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 716,
                          "nodeType": "ExpressionStatement",
                          "src": "13108:105:0"
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 679,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 676,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 673,
                      "src": "12941:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 677,
                        "name": "stockholderList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37,
                        "src": "12945:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 678,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "12945:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "12941:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 719,
                  "initializationExpression": {
                    "assignments": [
                      673
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "12934:1:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 719,
                        "src": "12929:6:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12929:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 675,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 674,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12938:1:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "12929:10:0"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "12969:3:0",
                      "subExpression": {
                        "id": 680,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 673,
                        "src": "12969:1:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 682,
                    "nodeType": "ExpressionStatement",
                    "src": "12969:3:0"
                  },
                  "nodeType": "ForStatement",
                  "src": "12924:301:0"
                },
                {
                  "expression": {
                    "id": 723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 720,
                      "name": "lastMeetingTime",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 27,
                      "src": "13235:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 721,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967292,
                        "src": "13253:5:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 722,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "13253:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13235:33:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 724,
                  "nodeType": "ExpressionStatement",
                  "src": "13235:33:0"
                },
                {
                  "expression": {
                    "id": 727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 725,
                      "name": "isMeeting",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "13279:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 726,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "13291:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "13279:17:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 728,
                  "nodeType": "ExpressionStatement",
                  "src": "13279:17:0"
                }
              ]
            },
            "functionSelector": "de88a342",
            "id": 730,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 597,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 596,
                  "name": "isStockholder",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 116,
                  "src": "12179:13:0"
                },
                "nodeType": "ModifierInvocation",
                "src": "12179:13:0"
              }
            ],
            "name": "payDividends",
            "nameLocation": "12157:12:0",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 595,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12169:2:0"
            },
            "returnParameters": {
              "id": 598,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12193:0:0"
            },
            "scope": 731,
            "src": "12148:1156:0",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 732,
        "src": "1703:11606:0",
        "usedErrors": []
      }
    ],
    "src": "35:13276:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.13+commit.abaa5c0e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2022-12-21T19:07:47.719Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}